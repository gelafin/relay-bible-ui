{"version":3,"sources":["assets/stylesheets/layouts.js","components/common/PageHeader.js","components/common/FormLabel.js","components/common/SingletonInputForm.js","assets/stylesheets/inputs.js","components/common/SingletonInputFormText.js","components/common/SingletonInputFormSelect.js","components/common/FormSection.js","components/pages/PageStyler.js","assets/stylesheets/buttons.js","components/buttons/DeleteButton.js","components/common/ConfirmDialog.js","components/common/MainNav.js","components/pages/ProfilePage.js","App.js"],"names":["colors","layoutStyles","StyleSheet","create","page","flex","backgroundColor","pageMargins","marginLeft","appBar","PageHeader","headingText","Appbar","Header","style","BackAction","onPress","console","log","Content","title","FormLabel","label","Text","SingletonInputForm","onSubmit","initialValue","inputComponent","inputComponentProps","useState","buttonVariant","setButtonVariant","buttonOptions","setButtonOptions","currentValue","setCurrentValue","useEffect","buttonIcons","buttonPressHandlers","handleSavePress","InputComponent","View","styles","container","verticalCenter","handleChange","value","otherProps","IconButton","icon","mode","iconButton","flexFlow","justifyContent","alignItems","height","width","inputStyle","default","padding","borderRadius","SingletonInputFormText","TextInput","onChangeText","SingletonInputFormSelect","options","onValueChange","itemValue","selectedValue","map","option","Item","FormSection","children","border","borderColor","borderLeftWidth","paddingLeft","PageStyler","buttonStyle","warningLabel","color","warningBorder","DeleteButton","Button","labelStyle","ConfirmDialog","description","shouldShowDialog","setShouldShowDialog","onConfirm","onCancel","hideDialog","Provider","Portal","Dialog","visible","onDismiss","Title","Paragraph","Actions","Tab","createMaterialBottomTabNavigator","screens","name","component","newUserName","newPersona","newAffiliation","alert","tabBarLabel","MainNav","Navigator","initialRouteName","barStyle","screen","Screen","tabBarIcon","MaterialCommunityIcons","size","App","NavigationContainer","offWhite","plainBackground"],"mappings":"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","file":"static/js/app.b55f221a.chunk.js","sourcesContent":["import { StyleSheet } from 'react-native';\r\n\r\nconst colors = {\r\n  'WHITE': '#FFF',\r\n  'DARK_GRAY': '#707070'\r\n}\r\n\r\nconst layoutStyles = StyleSheet.create({\r\n  page: {\r\n    flex: 1,\r\n    backgroundColor: colors.WHITE,\r\n  },\r\n  pageMargins: {\r\n    marginLeft: '20px'\r\n  },\r\n  appBar: {\r\n    backgroundColor: colors.DARK_GRAY\r\n  }\r\n});\r\n\r\nexport { layoutStyles };","import { React } from 'react';\r\nimport { Appbar } from 'react-native-paper';\r\n\r\n// custom\r\nimport { layoutStyles } from '../../assets/stylesheets/layouts';\r\n\r\nconst PageHeader = ({headingText}) => {\r\n  // TODO: import goBack\r\n  const goBack = () => console.log('back button pressed');\r\n\r\n  return (\r\n    <Appbar.Header style={layoutStyles.appBar}>\r\n      <Appbar.BackAction onPress={goBack} />\r\n      <Appbar.Content title={headingText} />\r\n    </Appbar.Header>\r\n  );\r\n}\r\n  \r\nexport { PageHeader };\r\n","import React from \"react\";\r\nimport { Text } from \"react-native\";\r\n\r\nconst FormLabel = ({label}) => <Text><b>{label}</b></Text>;\r\n\r\nexport { FormLabel };\r\n","/*\r\n * passing prop to prop https://stackoverflow.com/a/48919391/14257952\r\n */\r\n\r\nimport { React, useState, useEffect } from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { IconButton } from 'react-native-paper';\r\n\r\n// custom\r\nimport { FormLabel } from './FormLabel';\r\n\r\n/**\r\n * A labeled text input and a context-sensitive button that submits\r\n * the input value when the user decides to do so and the value has changed\r\n * @param inputComponentProps array of any props to pass to child, e.g., \r\n * the options array required for SingletonInputFormSelect\r\n */\r\nfunction SingletonInputForm({label, onSubmit, initialValue, inputComponent, inputComponentProps}) {\r\n  // button variant switches between edit, save, and undo\r\n  const [buttonVariant, setButtonVariant] = useState('edit');\r\n  const [buttonOptions, setButtonOptions] = useState({});\r\n  const [currentValue, setCurrentValue] = useState(initialValue);\r\n\r\n  // initialize button to edit button\r\n  useEffect(() => {\r\n    setButtonVariant('edit');\r\n  }, []);\r\n\r\n  // update these things whenever button variant changes\r\n  useEffect(() => {\r\n    setButtonOptions({\r\n      'icon': buttonIcons[buttonVariant],\r\n      'onPress': buttonPressHandlers[buttonVariant]\r\n    });\r\n  }, [buttonVariant]);\r\n\r\n  const buttonIcons = {\r\n    'edit': 'pencil',\r\n    'save': 'content-save'\r\n  };\r\n\r\n  const buttonPressHandlers = {\r\n    'edit': null,\r\n    'save': handleSavePress\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    // track current value\r\n    setCurrentValue(value);\r\n\r\n    // TODO: if value has actually changed, offer save and undo buttons\r\n    setButtonVariant('save');\r\n  };\r\n\r\n  const handleSavePress = () => {\r\n    // TODO: validate here?\r\n    onSubmit(currentValue);\r\n\r\n    // reset\r\n    setButtonVariant('edit');\r\n\r\n    // TODO: show toast \"snack bar\"\r\n  }\r\n\r\n  // rename component prop\r\n  const InputComponent = inputComponent;\r\n\r\n  return (\r\n    <View>\r\n      <FormLabel label={label}></FormLabel>\r\n      <View style={[styles.container, styles.verticalCenter]}>\r\n        <InputComponent\r\n          handleChange={handleChange}\r\n          currentValue={currentValue}\r\n          otherProps={inputComponentProps}\r\n        ></InputComponent>\r\n        <IconButton\r\n          icon={buttonOptions.icon}\r\n          mode=\"text\"\r\n          onPress={handleSavePress}\r\n          style={styles.iconButton}\r\n        ></IconButton>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexFlow: 'row wrap',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  verticalCenter: {\r\n    alignItems: 'center'\r\n  },\r\n  iconButton: {\r\n    height: 'fit-content',\r\n    width: 'fit-content'\r\n  }\r\n});\r\n\r\nexport { SingletonInputForm };\r\n","import { StyleSheet } from 'react-native';\r\n\r\nconst inputStyle = StyleSheet.create({\r\n  default: {\r\n    padding: '5px',\r\n    backgroundColor: '#eee',\r\n    borderRadius: '5px',\r\n  }\r\n});\r\n\r\nexport { inputStyle };\r\n","import React from \"react\";\r\nimport { TextInput } from \"react-native\";\r\n\r\nimport { inputStyle } from \"../../assets/stylesheets/inputs\";\r\n\r\nconst SingletonInputFormText = ({handleChange, currentValue}) => {\r\n  return (\r\n    <TextInput onChangeText={handleChange} value={currentValue} style={inputStyle.default}></TextInput>\r\n  );\r\n};\r\n\r\nexport { SingletonInputFormText };\r\n","import React from \"react\";\r\nimport { Picker } from '@react-native-picker/picker';\r\n\r\nimport { inputStyle } from \"../../assets/stylesheets/inputs\";\r\n\r\n/**\r\n * \r\n * @param {function} handleChange callback given the new item value on change.\r\n * Must set currentValue to update this component's input value\r\n * @param {string} currentValue value of this input, tracked in parent state\r\n * @param {array} otherProps array containing these props specific to the select component:\r\n * Array of objects with \"label\" and \"value\" properties, used as options\r\n * @returns \r\n */\r\nconst SingletonInputFormSelect = ({handleChange, currentValue, otherProps}) => {\r\n  // unpack options\r\n  let [options] = otherProps;\r\n\r\n  return (\r\n    <Picker\r\n      onValueChange={(itemValue) => {\r\n        handleChange(itemValue);\r\n      }}\r\n      selectedValue={currentValue}\r\n      style={inputStyle.default}\r\n    >\r\n      {options.map(option => (\r\n        <Picker.Item label={option.label} value={option.value} key={option.value} />\r\n      ))}\r\n    </Picker>\r\n  );\r\n};\r\n\r\nexport { SingletonInputFormSelect };\r\n","import { React } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { FormLabel } from './FormLabel';\r\n\r\nconst FormSection = ({label, children}) => (\r\n  <>\r\n    <FormLabel label={label}></FormLabel>\r\n    <View style={[styles.border, styles.padding]}>\r\n      {children}\r\n    </View>\r\n  </>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  border: {\r\n    borderColor: '#e5e5e5',\r\n    borderLeftWidth: '1px'\r\n  },\r\n  padding: {\r\n    paddingLeft: '10px'\r\n  }\r\n});\r\n\r\nexport { FormSection };\r\n","import { React } from 'react';\r\nimport { View } from 'react-native';\r\n\r\nimport { layoutStyles } from '../../assets/stylesheets/layouts';\r\n\r\nconst PageStyler = ({children}) => (\r\n  <View style={layoutStyles.page}>\r\n    <View style={layoutStyles.pageMargins}>{children}</View>\r\n  </View>\r\n);\r\n\r\nexport { PageStyler };\r\n","import { StyleSheet } from 'react-native';\r\n\r\nconst buttonStyle = StyleSheet.create({\r\n  default: {\r\n    padding: '5px',\r\n    backgroundColor: '#fff',\r\n    borderRadius: '5px',\r\n    width: 'fit-content'\r\n  },\r\n  warningLabel: {\r\n    color: 'red',\r\n  },\r\n  warningBorder: {\r\n    borderColor: 'red'\r\n  }\r\n});\r\n\r\nexport { buttonStyle };","import { React } from 'react';\r\nimport { Button } from 'react-native-paper';\r\nimport { buttonStyle } from '../../assets/stylesheets/buttons.js';\r\n\r\nconst DeleteButton = ({onPress, children}) => (\r\n  <Button\r\n    icon=\"delete\"\r\n    mode=\"outlined\"\r\n    style={[buttonStyle.default, buttonStyle.warningBorder]}\r\n    labelStyle={buttonStyle.warningLabel}\r\n    onPress={onPress}\r\n  >{children}</Button>\r\n);\r\n\r\nexport { DeleteButton };\r\n","import { React } from 'react';\r\nimport { Provider, Portal, Dialog, Paragraph, Button } from 'react-native-paper';\r\n\r\nconst ConfirmDialog = ({title, description, shouldShowDialog, setShouldShowDialog, onConfirm, onCancel}) => {\r\n  const hideDialog = () => setShouldShowDialog(false);\r\n\r\n  const handleCancel = () => {\r\n    hideDialog();\r\n    onCancel && onCancel();\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    hideDialog();\r\n    onConfirm();\r\n  };\r\n\r\n  return (\r\n    <Provider>\r\n      <Portal>\r\n        <Dialog visible={shouldShowDialog} onDismiss={hideDialog}>\r\n          <Dialog.Title>{title}</Dialog.Title>\r\n          <Dialog.Content>\r\n            <Paragraph>{description}</Paragraph>\r\n          </Dialog.Content>\r\n          <Dialog.Actions>\r\n            <Button onPress={handleConfirm}>Confirm</Button>\r\n            <Button onPress={handleCancel}>Cancel</Button>\r\n          </Dialog.Actions>\r\n        </Dialog>\r\n      </Portal>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport { ConfirmDialog };\r\n","import React from 'react';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n// custom\r\nimport { ProfilePage } from '../pages/ProfilePage';\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\n\r\nconst screens = [\r\n  {name: 'Profile', component: ProfilePage, tabBarLabel: 'Profile', icon: 'account'}\r\n];\r\n\r\nconst MainNav = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Profile\"\r\n      barStyle={{ backgroundColor: '#eee' }}\r\n    >\r\n      {screens.map(screen => (\r\n        <Tab.Screen\r\n          name={screen.name}\r\n          component={screen.component}\r\n          options={{\r\n            tabBarLabel: screen.tabBarLabel,\r\n            tabBarIcon: ({ color }) => (\r\n              <MaterialCommunityIcons name={screen.icon} color={color} size={26} />\r\n            ),\r\n          }}\r\n          key={screen.name}\r\n        />\r\n      ))}\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport { MainNav };","import { React, useState } from 'react';\r\n\r\n// custom components\r\nimport { PageHeader } from '../common/PageHeader.js';\r\nimport { SingletonInputForm } from '../common/SingletonInputForm.js';\r\nimport { SingletonInputFormText } from '../common/SingletonInputFormText.js';\r\nimport { SingletonInputFormSelect } from '../common/SingletonInputFormSelect.js';\r\nimport { FormSection } from '../common/FormSection.js';\r\nimport { PageStyler } from './PageStyler.js';\r\nimport { DeleteButton } from '../buttons/DeleteButton.js';\r\nimport { ConfirmDialog } from '../common/ConfirmDialog.js';\r\n\r\nconst DELETE_PROFILE_DIALOG_DESCRIPTION = 'Your public notes will remain. There\\'s nothing you can do about this. Mwahaha <3';\r\n\r\nconst ProfilePage = () => {\r\n  const [shouldShowDialog, setShouldShowDialog] = useState(false);\r\n\r\n  // TODO: these submit handlers could maybe be handled by the SingletonInputForm with an endpoint prop\r\n  const handleUsernameSubmit = (newUserName) => {\r\n    console.log('Profile page submitting new username:', newUserName);\r\n  };\r\n\r\n  const handleGospelPersonaSubmit = (newPersona) => {\r\n    console.log('Profile page submitting new gospel persona:', newPersona);\r\n  };\r\n\r\n  const handleAffiliationSubmit = (newAffiliation) => {\r\n    console.log('Profile page submitting new affiliation:', newAffiliation);\r\n  };\r\n\r\n  const deleteProfile = () => {\r\n    alert('Profile deleted! This will be a toast snack in the future');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageHeader headingText=\"Profile\"></PageHeader>\r\n      <PageStyler>\r\n        <SingletonInputForm\r\n          label=\"Username\"\r\n          onSubmit={handleUsernameSubmit}\r\n          initialValue=\"Cheeseyman\"\r\n          inputComponent={SingletonInputFormText}\r\n        ></SingletonInputForm>\r\n        <FormSection label=\"Personas\">\r\n          <SingletonInputForm\r\n            label=\"Gospel Doctrine\"\r\n            onSubmit={handleGospelPersonaSubmit}\r\n            initialValue=\"undecided\"\r\n            inputComponent={SingletonInputFormSelect}\r\n            inputComponentProps={[[\r\n              {label: 'Undecided', value: 'undecided'},\r\n              {label: 'Grace', value: 'grace'},\r\n              {label: 'Grace Plus Response', value: 'gracePlusResponse'},\r\n              {label: 'Not Listed', value: 'notListed'}\r\n            ]]}\r\n          ></SingletonInputForm>\r\n          <SingletonInputForm\r\n            label=\"Affiliation\"\r\n            onSubmit={handleAffiliationSubmit}\r\n            initialValue=\"mormon\"\r\n            inputComponent={SingletonInputFormSelect}\r\n            inputComponentProps={[[\r\n              {label: 'Undecided', value: 'undecided'},\r\n              {label: 'Church of Jesus Christ (Mormon)', value: 'mormon'},\r\n              {label: 'Protestant', value: 'protestant'},\r\n              {label: 'Not Listed', value: 'notListed'}\r\n            ]]}\r\n          ></SingletonInputForm>\r\n        </FormSection>\r\n        <DeleteButton onPress={()=>{setShouldShowDialog(true)}}>Delete Profile</DeleteButton>\r\n      </PageStyler>\r\n      {shouldShowDialog &&\r\n        <ConfirmDialog\r\n          title=\"Delete Profile?\"\r\n          description={DELETE_PROFILE_DIALOG_DESCRIPTION}\r\n          shouldShowDialog={shouldShowDialog}\r\n          setShouldShowDialog={setShouldShowDialog}\r\n          onConfirm={deleteProfile}\r\n        ></ConfirmDialog>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport { ProfilePage };\r\n","import { React } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\n// import { Provider as PaperThemeProvider } from 'react-native-paper';\n\n// custom components\nimport { MainNav } from './components/common/MainNav';\n\n// TODO: why theme causes errors?\n// adapted from docs Jul 2022\n// const theme = {\n//   colors: {\n//     primary: '#3498db',\n//     secondary: '#f1c40f',\n//     tertiary: '#a1b2c3',\n//     background: '#fff'\n//   },\n// };\n\nexport default function App() {\n  return (\n    // TODO: why theme causes errors?\n    // But theme must be used, because it's the only way to style MainNav's \n    // janky material-bottom-tabs (the other nav library is even worse)\n    // <PaperThemeProvider theme={theme}>\n    <NavigationContainer>\n      <View style={styles.container}>\n        {/* TODO: make this the AppBar? */}\n        <View style={styles.offWhite}>\n          <Text>Top of the screen</Text>\n        </View>\n        <MainNav></MainNav>\n      </View>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  plainBackground: {\n    backgroundColor: '#fff'\n  },\n  offWhite: {\n    backgroundColor: '#eee'\n  }\n});\n"],"sourceRoot":""}