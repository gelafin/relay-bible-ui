{"version":3,"sources":["components/common/PageHeader.js","components/common/SingletonInputForm.js","components/pages/ProfilePage.js","components/common/MainNav.js","App.js"],"names":["styles","StyleSheet","create","headingText","fontSize","PageHeader","Text","style","SingletonInputForm","label","onSubmit","initialValue","useState","buttonVariant","setButtonVariant","buttonOptions","setButtonOptions","currentValue","setCurrentValue","useEffect","buttonIcons","buttonPressHandlers","handleSavePress","View","TextInput","onChangeText","value","IconButton","icon","mode","onPress","iconButton","container","flex","backgroundColor","alignItems","justifyContent","page","ProfilePage","newUserName","console","log","Tab","createMaterialBottomTabNavigator","MainNav","Navigator","initialRouteName","barStyle","marginLeft","Screen","name","component","options","tabBarLabel","tabBarIcon","color","MaterialCommunityIcons","size","App","NavigationContainer","offWhite","plainBackground"],"mappings":"2LASMA,EAASC,IAAWC,OAAO,CAC/BC,YAAa,CACXC,SAAU,UAICC,EAZI,SAAC,GAAmB,IAAlBF,EAAiB,EAAjBA,YACnB,OACE,cAACG,EAAA,EAAD,CAAMC,MAAOP,EAAOG,YAApB,SAAkCA,K,kCCGvB,SAASK,EAAT,GAA8D,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,aAE3D,EAA0CC,mBAAS,QAAnD,WAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA0CF,mBAAS,IAAnD,WAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAwCJ,mBAASD,GAAjD,WAAOM,EAAP,KAAqBC,EAArB,KAGAC,qBAAU,WACRL,EAAiB,UAChB,IAGHK,qBAAU,WACRH,EAAiB,CACf,KAAQI,EAAYP,GACpB,QAAWQ,EAAoBR,OAEhC,CAACA,IAEJ,IAAMO,EAAc,CAClB,KAAQ,SACR,KAAQ,gBAGJC,EAAsB,CAC1B,KAAQ,KACR,KAAQC,GAWJA,EAAkB,WAEtBZ,EAASO,GAGTH,EAAiB,SAKnB,OACE,eAACS,EAAA,EAAD,WACE,cAACjB,EAAA,EAAD,UAAM,4BAAIG,MACV,cAACe,EAAA,EAAD,CAAWC,aArBM,SAACC,GAEpBR,EAAgBQ,GAGhBZ,EAAiB,SAgBwBY,MAAOT,IAC9C,cAACU,EAAA,EAAD,CACEC,KAAMb,EAAca,KACpBC,KAAK,OACLC,QAASR,EACTf,MAAOP,EAAO+B,gBAMtB,IAAM/B,EAASC,IAAWC,OAAO,CAC/B8B,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,YC/CdpC,EAASC,IAAWC,OAAO,CAC/BmC,KAAM,CACJJ,KAAM,EACNC,gBAAiB,UAINI,EA3BK,WAMlB,OACE,eAACf,EAAA,EAAD,CAAMhB,MAAOP,EAAOqC,KAApB,UACE,cAAC,EAAD,CAAYlC,YAAY,YACxB,+BACE,cAACK,EAAD,CACEC,MAAM,WACNC,SAVqB,SAAC6B,GAC5BC,QAAQC,IAAI,wCAAyCF,IAU/C5B,aAAa,qBCbjB+B,EAAMC,cAsBGC,EApBC,WACd,OACE,cAACF,EAAIG,UAAL,CACEC,iBAAiB,UACjBC,SAAU,CAAEb,gBAAiB,QAC7B3B,MAAO,CAACyC,WAAY,QAHtB,SAKE,cAACN,EAAIO,OAAL,CAAYC,KAAK,UACfC,UAAWb,EACXc,QAAS,CACPC,YAAa,UACbC,WAAY,gBAAGC,EAAH,EAAGA,MAAH,OACV,cAACC,EAAA,QAAD,CAAwBN,KAAK,UAAUK,MAAOA,EAAOE,KAAM,YCdxD,SAASC,IACtB,OACE,cAACC,EAAA,EAAD,UACE,eAACpC,EAAA,EAAD,CAAMhB,MAAOP,EAAOgC,UAApB,UAEE,cAACT,EAAA,EAAD,CAAMhB,MAAOP,EAAO4D,SAApB,SACE,cAACtD,EAAA,EAAD,kCAEF,cAAC,EAAD,SAMR,IAAMN,EAASC,IAAWC,OAAO,CAC/B8B,UAAW,CACTC,KAAM,GAER4B,gBAAiB,CACf3B,gBAAiB,QAEnB0B,SAAU,CACR1B,gBAAiB,W","file":"static/js/app.6866087f.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Text, StyleSheet } from 'react-native';\r\n\r\nconst PageHeader = ({headingText}) => {\r\n  return (\r\n    <Text style={styles.headingText}>{headingText}</Text>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  headingText: {\r\n    fontSize: '2rem'\r\n  },\r\n});\r\n  \r\nexport default PageHeader;\r\n","import { React, useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, TextInput, View } from 'react-native';\r\nimport { IconButton } from 'react-native-paper';\r\n\r\n/**\r\n * A labeled text input and a context-sensitive button that submits\r\n * the input value when the user decides to do so and the value has changed\r\n */\r\nexport default function SingletonInputForm({label, onSubmit, initialValue}) {\r\n  // button variant switches between edit, save, and undo\r\n  const [buttonVariant, setButtonVariant] = useState('edit');\r\n  const [buttonOptions, setButtonOptions] = useState({});\r\n  const [currentValue, setCurrentValue] = useState(initialValue);\r\n\r\n  // initialize button to edit button\r\n  useEffect(() => {\r\n    setButtonVariant('edit');\r\n  }, []);\r\n\r\n  // update these things whenever button variant changes\r\n  useEffect(() => {\r\n    setButtonOptions({\r\n      'icon': buttonIcons[buttonVariant],\r\n      'onPress': buttonPressHandlers[buttonVariant]\r\n    });\r\n  }, [buttonVariant]);\r\n\r\n  const buttonIcons = {\r\n    'edit': 'pencil',\r\n    'save': 'content-save'\r\n  };\r\n\r\n  const buttonPressHandlers = {\r\n    'edit': null,\r\n    'save': handleSavePress\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    // track current value\r\n    setCurrentValue(value);\r\n\r\n    // TODO: if value has actually changed, offer save and undo buttons\r\n    setButtonVariant('save');\r\n  };\r\n\r\n  const handleSavePress = () => {\r\n    // TODO: validate here?\r\n    onSubmit(currentValue);\r\n\r\n    // reset\r\n    setButtonVariant('edit');\r\n\r\n    // TODO: show toast \"snack bar\"\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <Text><b>{label}</b></Text>\r\n      <TextInput onChangeText={handleChange} value={currentValue}></TextInput>\r\n      <IconButton\r\n        icon={buttonOptions.icon}\r\n        mode=\"text\"\r\n        onPress={handleSavePress}\r\n        style={styles.iconButton}\r\n      ></IconButton>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  }\r\n});","import { React } from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\n\r\n// custom components\r\nimport PageHeader from '../common/PageHeader.js';\r\nimport SingletonInputForm from '../common/SingletonInputForm.js';\r\n\r\nconst ProfilePage = () => {\r\n  // TODO: this could maybe be handled by the SingletonInputForm with an endpoint prop\r\n  const handleUsernameSubmit = (newUserName) => {\r\n    console.log('Profile page submitting new username:', newUserName);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.page}>\r\n      <PageHeader headingText=\"Profile\"></PageHeader>\r\n      <main>\r\n        <SingletonInputForm\r\n          label=\"Username\"\r\n          onSubmit={handleUsernameSubmit}\r\n          initialValue=\"Cheeseyman\"\r\n        ></SingletonInputForm>\r\n      </main>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flex: 1,\r\n    backgroundColor: '#fff'\r\n  }\r\n});\r\n\r\nexport default ProfilePage;\r\n","import React from 'react';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n// pages\r\nimport ProfilePage from '../pages/ProfilePage';\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\n\r\nconst MainNav = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Profile\"\r\n      barStyle={{ backgroundColor: '#eee' }}\r\n      style={{marginLeft: '20px'}}\r\n    >\r\n      <Tab.Screen name=\"Profile\"\r\n        component={ProfilePage}\r\n        options={{\r\n          tabBarLabel: 'Profile',\r\n          tabBarIcon: ({ color }) => (\r\n            <MaterialCommunityIcons name=\"account\" color={color} size={26} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default MainNav;","import { React } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\n\n// custom components\nimport MainNav from './components/common/MainNav';\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <View style={styles.container}>\n        {/* TODO: make this the AppBar? */}\n        <View style={styles.offWhite}>\n          <Text>Top of the screen</Text>\n        </View>\n        <MainNav></MainNav>\n      </View>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  plainBackground: {\n    backgroundColor: '#fff'\n  },\n  offWhite: {\n    backgroundColor: '#eee'\n  }\n});\n"],"sourceRoot":""}