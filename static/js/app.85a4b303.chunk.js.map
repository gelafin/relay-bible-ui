{"version":3,"sources":["assets/stylesheets/themeConstants/themeColors.js","assets/stylesheets/layouts.js","components/common/PageHeader.js","components/common/FormLabel.js","components/common/SingletonInputForm.js","assets/stylesheets/inputs.js","components/common/SingletonInputFormText.js","components/common/SingletonInputFormSelect.js","components/common/FormSection.js","components/pages/PageStyler.js","assets/stylesheets/buttons.js","components/buttons/DeleteButton.js","components/common/ConfirmDialog.js","components/common/ContextHeader.js","assets/stylesheets/text.js","components/buttons/ChapterSelectButton.js","constants/bookMetadata.js","components/buttons/ListOption.js","components/common/ChapterSelectModal.js","components/unique/Verse.js","components/common/Drawer.js","components/buttons/RelatedButton.js","components/unique/DrawerOptionsFragment.js","components/buttons/DrawerExpandButton.js","components/buttons/CloseButton.js","components/common/DrawerAppBar.js","components/common/DrawerPage.js","util/Verse.js","components/unique/NoteEditDialog.js","components/buttons/SaveButton.js","components/buttons/EditButton.js","components/buttons/DeleteIconButton.js","components/buttons/UndoButton.js","components/unique/Note.js","components/unique/NotesList.js","components/common/NoteFilterModal.js","util/VerseReferenceFormatter.js","api/notesApi.js","components/pages/NotesPage.js","components/pages/CommentaryPage.js","components/pages/ReadingPage.js","util/Enum.js","components/unique/MainNav.js","components/pages/ProfilePage.js","App.js"],"names":["colors","layoutStyles","StyleSheet","create","page","flex","backgroundColor","pageMargins","marginLeft","marginRight","container","horizontalContainer","justifyContent","flexDirection","verticalContainer","centerAlign","alignItems","centerJustify","verticalCenter","absolute","position","appBar","appBarBold","appBarSmall","height","paddingTop","paddingBottom","appBarSmallText","fontSize","readingPage","listSelectOption","padding","cursor","listSelectOptionSelected","modalContainerStyle","width","inline","display","drawer","bottom","zIndex","boxShadow","fullScreenHeight","fullWidth","PageHeader","headingText","onFilterPress","onNewPress","Appbar","Header","style","Content","title","Action","icon","onPress","FormLabel","label","Text","SingletonInputForm","onSubmit","initialValue","inputComponent","inputComponentProps","useState","buttonVariant","setButtonVariant","buttonOptions","setButtonOptions","currentValue","setCurrentValue","useEffect","buttonIcons","buttonPressHandlers","handleSavePress","InputComponent","View","styles","handleChange","value","otherProps","IconButton","mode","iconButton","flexFlow","inputStyle","default","borderRadius","SingletonInputFormText","flexValue","multiline","autoHeight","numberOfLines","isFocused","onFocus","onBlur","inputRef","useRef","setShouldUseAutoHeight","inputLength","length","current","focus","setSelectionRange","TextInput","ref","onChangeText","SingletonInputFormSelect","options","onValueChange","itemValue","selectedValue","map","option","Item","FormSection","children","border","borderColor","borderLeftWidth","paddingLeft","PageStyler","customPageStyle","buttonStyle","defaultLabel","color","warningLabel","warning","chip","transparent","iconButtonStyle","DeleteButton","Button","labelStyle","ConfirmDialog","description","shouldShowDialog","setShouldShowDialog","onConfirm","onCancel","hideDialog","Provider","Portal","Dialog","visible","onDismiss","Title","Paragraph","Actions","ContextHeader","customHeadingComponent","titleStyle","textStyles","superscript","plain","selectedVerse","borderBottomColor","borderBottomWidth","ChapterSelectButton","uppercase","BOOK_METADATA","chapterCount","order","ListOption","isSelected","TouchableOpacity","ChapterSelectModal","setVisible","onChapterSelect","initialBookName","initialChapterNumber","selectedBook","setSelectedBook","selectedChapter","setSelectedChapter","setChapterCount","chapterSelectionDisplay","setChapterSelectionDisplay","hideModal","booksData","Object","keys","key","bookName","chapterData","Array","index","chapterNumber","book","chapter","Modal","contentContainerStyle","FlatList","data","renderItem","item","keyExtractor","Verse","verseText","verseNumber","onVersePress","Pressable","text","number","Drawer","isOpen","minimize","RelatedButton","DrawerOptionsFragment","onRelatedNotesPress","onRelatedCommentaryPress","alignSelf","icons","DrawerExpandButton","isInitiallyUp","hide","isUp","setIsUp","iconColor","setIconColor","disabled","setDisabled","HIDDEN","DEFAULT","size","pointerEvents","CloseButton","DrawerAppBar","contextHeaderText","onClosePress","onExpandPress","closeButton","visibility","expandButton","DrawerPage","headerText","createVerse","bookNameIn","chapterNumberIn","verseNumberIn","reference","equals","verseObj","this","NoteEditDialog","initialNoteData","noteData","setNoteData","body","linkedVerses","join","split","tempLinkedVerses","referenceText","tempSubmitData","console","log","SaveButton","EditButton","DeleteIconButton","UndoButton","Note","noteId","linkedVerseReferences","isPublic","deleteMe","currentBody","setCurrentBody","hasChanges","setHasChanges","setIsFocused","showDeleteButton","setShowDeleteButton","showEditButton","setShowEditButton","setNumberOfLines","toggleBlurFocusButtons","showBlurButtons","focusEdit","saveNote","discardChanges","minWidth","newText","setTimeout","fontStyle","flexWrap","maxWidth","NotesList","notes","deleteNote","note","id","TEST_VERSES","NoteFilterModal","filterSettings","setFilterSettings","selectedVerses","JSON","stringify","newRelatedVerses","versesToString","verses","firstBook","firstChapter","firstVerse","sampleNotes","NotesPage","initialSelectedVerseObjects","setContextHeaderText","setNotes","showNoteCreateDialog","setShowNoteCreateDialog","showNoteFilterModal","setShowNoteFilterModal","newHeaderText","updateFilteredNotes","isInFilterSettings","some","verseObj2","filter","a","async","freshNotes","ScrollView","scrollEnabled","notesCopy","push","CommentaryPage","initialSelectedVerses","drawerContentsOptions","i","arguments","Tab","createMaterialBottomTabNavigator","screens","name","component","newUserName","newPersona","newAffiliation","alert","tabBarLabel","currentBookName","setCurrentBookName","currentChapterNumber","setCurrentChapterNumber","currentVerseList","setCurrentVerseList","Set","selectedVerseNumbers","setSelectedVerseNumbers","modalIsOpen","setModalIsOpen","currentBookAndChapterString","setCurrentBookAndChapterString","drawerIsMinimized","setDrawerIsMinimized","drawerContents","setDrawerContents","selectedVerseNumbersOrdered","setSelectedVersesOrdered","from","sort","closeDrawer","clearSelectedVerses","VERSE_SELECTED_OPTIONS","toggleExpandMinimizeDrawer","reqUrl","BASE_URL","replaceAll","axios","get","res","verseList","fetchVerses","verseIsSelected","has","handleVersePress","verse","handleVerseDeselect","handleVerseSelect","tempCopy","add","delete","selectedVerseObjects","verseData","bible_text","COMMENTARY_PAGE","NOTES_PAGE","MainNav","Navigator","initialRouteName","barStyle","screen","Screen","tabBarIcon","MaterialCommunityIcons","App","NavigationContainer"],"mappings":"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","file":"static/js/app.85a4b303.chunk.js","sourcesContent":["const colors = {\r\n  'WHITE': '#FFF',\r\n  'DARK_GRAY': '#DADADA',\r\n  'LIGHT_GRAY': '#EEE',\r\n  'KHAKI': '#FCF2D8',\r\n  'RED': 'red',\r\n  'BLUE': 'blue',\r\n  'BLACK': 'black'\r\n}\r\n\r\nexport { colors };\r\n","import { StyleSheet } from 'react-native';\r\nimport { colors } from './themeConstants/themeColors';\r\n\r\n// z-indices between these breakpoints can be used,\r\n// but these breakpoints form layer groups\r\nconst zIndexBreakpoints = {\r\n  'LEVEL_1': 1,\r\n  'LEVEL_2': 100  // bottom of a drawer, for example\r\n};\r\n\r\nconst layoutStyles = StyleSheet.create({\r\n  page: {\r\n    flex: 1,\r\n    backgroundColor: colors.WHITE,\r\n  },\r\n  pageMargins: {\r\n    marginLeft: '20px',\r\n    marginRight: '20px',\r\n    flex: 1\r\n  },\r\n  container: {\r\n    flex: 1\r\n  },\r\n  horizontalContainer: {\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'row'\r\n  },\r\n  verticalContainer: {\r\n    flexDirection: 'column'\r\n  },\r\n  centerAlign: {\r\n    alignItems: 'center'\r\n  },\r\n  centerJustify: {\r\n    justifyContent: 'center'\r\n  },\r\n  verticalCenter: {\r\n    alignItems: 'center'\r\n  },\r\n  absolute: {\r\n    position: 'absolute'\r\n  },\r\n  appBar: {\r\n    backgroundColor: colors.LIGHT_GRAY\r\n  },\r\n  appBarBold: {\r\n    backgroundColor: colors.DARK_GRAY\r\n  },\r\n  appBarSmall: {\r\n    height: 'fit-content',\r\n    paddingTop: '10px',\r\n    paddingBottom: '10px',\r\n  },\r\n  appBarSmallText: {\r\n    fontSize: '1rem'\r\n  },\r\n  readingPage: {\r\n    backgroundColor: colors.KHAKI\r\n  },\r\n  listSelectOption: {\r\n    padding: 20,\r\n    cursor: 'pointer'\r\n  },\r\n  listSelectOptionSelected: {\r\n    backgroundColor: colors.KHAKI\r\n  },\r\n  modalContainerStyle: {\r\n    backgroundColor: colors.WHITE,\r\n    padding: 20,\r\n    width: '80vw',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    height: '100%'\r\n  },\r\n  inline: {\r\n    display: 'inline'\r\n  },\r\n  drawer: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    width: '100vw',\r\n    height: '250px',\r\n    backgroundColor: colors.WHITE,\r\n    padding: '10px 30px',\r\n    zIndex: zIndexBreakpoints.LEVEL_2,\r\n    boxShadow: 'rgb(0 0 0 / 60%) 0px -4px 4px 2px'  \r\n  },\r\n  fullScreenHeight: {\r\n    height: '100vh'\r\n  },\r\n  fullWidth: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nconst absoluteCenterContainer = [\r\n  layoutStyles.horizontalContainer,\r\n  layoutStyles.centerJustify,\r\n  layoutStyles.absolute,\r\n  {width: '100%'}\r\n];\r\n\r\nexport { layoutStyles, absoluteCenterContainer, zIndexBreakpoints };","import { React } from 'react';\r\nimport { Appbar } from 'react-native-paper';\r\n\r\n// custom\r\nimport { layoutStyles } from '../../assets/stylesheets/layouts';\r\n\r\nconst PageHeader = ({headingText, onFilterPress, onNewPress}) => {\r\n  return (\r\n    <Appbar.Header style={layoutStyles.appBarBold}>\r\n      <Appbar.Content title={headingText} />\r\n      {onNewPress && <Appbar.Action icon=\"plus\" onPress={onNewPress} />}\r\n      {onFilterPress && <Appbar.Action icon=\"filter\" onPress={onFilterPress} />}\r\n    </Appbar.Header>\r\n  );\r\n}\r\n  \r\nexport { PageHeader };\r\n","import React from \"react\";\r\nimport { Text } from \"react-native\";\r\n\r\nconst FormLabel = ({label}) => <Text><b>{label}</b></Text>;\r\n\r\nexport { FormLabel };\r\n","/*\r\n * passing prop to prop https://stackoverflow.com/a/48919391/14257952\r\n */\r\n\r\nimport { React, useState, useEffect } from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { IconButton } from 'react-native-paper';\r\n\r\n// custom\r\nimport { FormLabel } from './FormLabel';\r\n\r\n/**\r\n * A labeled text input and a context-sensitive button that submits\r\n * the input value when the user decides to do so and the value has changed\r\n * @param inputComponentProps array of any props to pass to child, e.g., \r\n * the options array required for SingletonInputFormSelect\r\n */\r\nfunction SingletonInputForm({label, onSubmit, initialValue, inputComponent, inputComponentProps}) {\r\n  // button variant switches between edit, save, and undo\r\n  // TODO: these have been abstracted. Use EditButton and SaveButton\r\n  const [buttonVariant, setButtonVariant] = useState('edit');\r\n  const [buttonOptions, setButtonOptions] = useState({});\r\n  const [currentValue, setCurrentValue] = useState(initialValue);\r\n\r\n  // initialize button to edit button\r\n  useEffect(() => {\r\n    setButtonVariant('edit');\r\n  }, []);\r\n\r\n  // update these things whenever button variant changes\r\n  useEffect(() => {\r\n    setButtonOptions({\r\n      'icon': buttonIcons[buttonVariant],\r\n      'onPress': buttonPressHandlers[buttonVariant]\r\n    });\r\n  }, [buttonVariant]);\r\n\r\n  const buttonIcons = {\r\n    'edit': 'pencil',\r\n    'save': 'content-save'\r\n  };\r\n\r\n  const buttonPressHandlers = {\r\n    'edit': null,\r\n    'save': handleSavePress\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    // track current value\r\n    setCurrentValue(value);\r\n\r\n    // TODO: if value has actually changed, offer save and undo buttons\r\n    setButtonVariant('save');\r\n  };\r\n\r\n  const handleSavePress = () => {\r\n    // TODO: validate here?\r\n    onSubmit(currentValue);\r\n\r\n    // reset\r\n    setButtonVariant('edit');\r\n\r\n    // TODO: show toast \"snack bar\"\r\n  }\r\n\r\n  // rename component prop\r\n  const InputComponent = inputComponent;\r\n\r\n  return (\r\n    <View>\r\n      <FormLabel label={label}></FormLabel>\r\n      <View style={[styles.container, styles.verticalCenter]}>\r\n        <InputComponent\r\n          handleChange={handleChange}\r\n          currentValue={currentValue}\r\n          otherProps={inputComponentProps}\r\n        ></InputComponent>\r\n        <IconButton\r\n          icon={buttonOptions.icon}\r\n          mode=\"text\"\r\n          onPress={handleSavePress}\r\n          style={styles.iconButton}\r\n        ></IconButton>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexFlow: 'row wrap',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  verticalCenter: {\r\n    alignItems: 'center'\r\n  },\r\n  iconButton: {\r\n    height: 'fit-content',\r\n    width: 'fit-content'\r\n  }\r\n});\r\n\r\nexport { SingletonInputForm };\r\n","import { StyleSheet } from 'react-native';\r\n\r\nconst inputStyle = StyleSheet.create({\r\n  default: {\r\n    padding: '5px',\r\n    backgroundColor: '#eee',\r\n    borderRadius: '5px',\r\n    height: 'fit-content'\r\n  }\r\n});\r\n\r\nexport { inputStyle };\r\n","// useRef code adapted from https://stackoverflow.com/a/62250053/14257952 and React Native docs Jul 2022\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { TextInput } from \"react-native\";\r\n\r\nimport { inputStyle } from \"../../assets/stylesheets/inputs\";\r\n\r\n/**\r\n * @param isFocused programmatically sets focus\r\n * @param onFocus is called when user sets focus\r\n * @returns \r\n */\r\nconst SingletonInputFormText = ({\r\n  handleChange, currentValue, flexValue, multiline, autoHeight, numberOfLines, isFocused, onFocus, onBlur\r\n}) => {\r\n  const inputRef = useRef(null);\r\n  const [boxHeight, setBoxHeight] = useState(32);\r\n  const [shouldUseAutoHeight, setShouldUseAutoHeight] = useState(true);\r\n\r\n  useEffect(() => setShouldUseAutoHeight(!numberOfLines && autoHeight), [numberOfLines, autoHeight]);\r\n\r\n  const focusInput = () => {\r\n    const inputLength = currentValue?.length || 0;\r\n\r\n    if (inputRef?.current && isFocused) {\r\n      inputRef.current.focus();\r\n      inputRef.current.setSelectionRange(inputLength, inputLength);\r\n    }\r\n  };\r\n\r\n  // DEBUG: does not work\r\n  // const updateHeight = ({nativeEvent}) => {\r\n  //   console.log('setting height based on content size to ', nativeEvent.contentSize.height);\r\n  //   setBoxHeight(nativeEvent.contentSize.height);\r\n  // };\r\n\r\n  useEffect(focusInput, [isFocused, inputRef]);\r\n\r\n  return (\r\n    <TextInput\r\n      ref={inputRef}\r\n      onChangeText={handleChange}\r\n      value={currentValue}\r\n      style={[\r\n        inputStyle.default,\r\n        flexValue && {flex: flexValue, alignItems: 'stretch'},\r\n        // overflow: hidden is needed to hide scroll bar, but height is correct\r\n        // DEBUG: does not work\r\n        // shouldUseAutoHeight && {height: boxHeight, overflow: 'hidden'}\r\n      ]}\r\n      multiline={multiline}\r\n      numberOfLines={numberOfLines}  // affects Android only\r\n      // DEBUG: does not work\r\n      // onContentSizeChange={shouldUseAutoHeight && updateHeight}\r\n      onFocus={onFocus}\r\n      onBlur={onBlur}\r\n    ></TextInput>\r\n  );\r\n};\r\n\r\nexport { SingletonInputFormText };\r\n","import React from \"react\";\r\nimport { Picker } from '@react-native-picker/picker';\r\n\r\nimport { inputStyle } from \"../../assets/stylesheets/inputs\";\r\n\r\n/**\r\n * \r\n * @param {function} handleChange callback given the new item value on change.\r\n * Must set currentValue to update this component's input value\r\n * @param {string} currentValue value of this input, tracked in parent state\r\n * @param {array} otherProps array containing these props specific to the select component:\r\n * Array of objects with \"label\" and \"value\" properties, used as options\r\n * @returns \r\n */\r\nconst SingletonInputFormSelect = ({handleChange, currentValue, otherProps}) => {\r\n  // unpack options\r\n  let [options] = otherProps;\r\n\r\n  return (\r\n    <Picker\r\n      onValueChange={(itemValue) => {\r\n        handleChange(itemValue);\r\n      }}\r\n      selectedValue={currentValue}\r\n      style={inputStyle.default}\r\n    >\r\n      {options.map(option => (\r\n        <Picker.Item label={option.label} value={option.value} key={option.value} />\r\n      ))}\r\n    </Picker>\r\n  );\r\n};\r\n\r\nexport { SingletonInputFormSelect };\r\n","import { React } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { FormLabel } from './FormLabel';\r\n\r\nconst FormSection = ({label, children}) => (\r\n  <>\r\n    <FormLabel label={label}></FormLabel>\r\n    <View style={[styles.border, styles.padding]}>\r\n      {children}\r\n    </View>\r\n  </>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  border: {\r\n    borderColor: '#e5e5e5',\r\n    borderLeftWidth: '1px'\r\n  },\r\n  padding: {\r\n    paddingLeft: '10px'\r\n  }\r\n});\r\n\r\nexport { FormSection };\r\n","import { React } from 'react';\r\nimport { View } from 'react-native';\r\n\r\nimport { layoutStyles } from '../../assets/stylesheets/layouts';\r\n\r\nconst PageStyler = ({children, customPageStyle}) => (\r\n  <View style={[layoutStyles.page, customPageStyle]}>\r\n    <View style={layoutStyles.pageMargins}>{children}</View>\r\n  </View>\r\n);\r\n\r\nexport { PageStyler };\r\n","import { StyleSheet } from 'react-native';\r\nimport { colors } from './themeConstants/themeColors';\r\n\r\nconst buttonStyle = StyleSheet.create({\r\n  default: {\r\n    padding: '5px',\r\n    backgroundColor: colors.BLUE,\r\n    borderRadius: '5px',\r\n    width: 'fit-content',\r\n    cursor: 'pointer'\r\n  },\r\n  defaultLabel: {\r\n    color: colors.WHITE\r\n  },\r\n  warningLabel: {\r\n    color: colors.RED,\r\n  },\r\n  warning: {\r\n    backgroundColor: colors.WHITE,\r\n    borderColor: colors.RED\r\n  },\r\n  chip: {\r\n    padding: 0,\r\n    borderRadius: '20px',\r\n  },\r\n  transparent: {\r\n    backgroundColor: ''\r\n  }\r\n});\r\n\r\nconst iconButtonStyle = StyleSheet.create({\r\n  iconButton: {\r\n    height: 'fit-content',\r\n    width: 'fit-content'\r\n  }\r\n});\r\n\r\nexport { buttonStyle, iconButtonStyle };","import { React } from 'react';\r\nimport { Button } from 'react-native-paper';\r\nimport { buttonStyle } from '../../assets/stylesheets/buttons.js';\r\n\r\nconst DeleteButton = ({onPress, children}) => (\r\n  <Button\r\n    icon=\"delete\"\r\n    mode=\"outlined\"\r\n    style={[buttonStyle.default, buttonStyle.warning]}\r\n    labelStyle={buttonStyle.warningLabel}\r\n    onPress={onPress}\r\n  >{children}</Button>\r\n);\r\n\r\nexport { DeleteButton };\r\n","import { React } from 'react';\r\nimport { Provider, Portal, Dialog, Paragraph, Button } from 'react-native-paper';\r\n\r\nconst ConfirmDialog = ({title, description, shouldShowDialog, setShouldShowDialog, onConfirm, onCancel}) => {\r\n  const hideDialog = () => setShouldShowDialog(false);\r\n\r\n  const handleCancel = () => {\r\n    hideDialog();\r\n    onCancel && onCancel();\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    hideDialog();\r\n    onConfirm();\r\n  };\r\n\r\n  return (\r\n    <Provider>\r\n      <Portal>\r\n        <Dialog visible={shouldShowDialog} onDismiss={hideDialog}>\r\n          <Dialog.Title>{title}</Dialog.Title>\r\n          <Dialog.Content>\r\n            <Paragraph>{description}</Paragraph>\r\n          </Dialog.Content>\r\n          <Dialog.Actions>\r\n            <Button onPress={handleConfirm}>Confirm</Button>\r\n            <Button onPress={handleCancel}>Cancel</Button>\r\n          </Dialog.Actions>\r\n        </Dialog>\r\n      </Portal>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport { ConfirmDialog };\r\n","import { React } from 'react';\r\nimport { Appbar } from 'react-native-paper';\r\n\r\n// custom\r\nimport { layoutStyles } from '../../assets/stylesheets/layouts';\r\n\r\nconst ContextHeader = ({headingText, customHeadingComponent}) => {\r\n  return (\r\n    <Appbar.Header style={[layoutStyles.appBar, layoutStyles.appBarSmall]}>\r\n      {\r\n        customHeadingComponent ||\r\n        <Appbar.Content title={headingText} titleStyle={layoutStyles.appBarSmallText} />\r\n      }\r\n    </Appbar.Header>\r\n  );\r\n}\r\n  \r\nexport { ContextHeader };","import { StyleSheet } from 'react-native';\r\nimport { colors } from './themeConstants/themeColors';\r\n\r\nconst textStyles = StyleSheet.create({\r\n  superscript: {\r\n    fontSize: '0.7rem'\r\n  },\r\n  plain: {\r\n    color: 'black'\r\n  },\r\n  listSelectOption: {\r\n    fontSize: 32\r\n  },\r\n  selectedVerse: {\r\n    borderBottomColor: colors.BLUE,\r\n    borderBottomWidth: '2px'\r\n  }\r\n});\r\n\r\nexport { textStyles };\r\n","import { React } from 'react';\r\nimport { Button } from 'react-native-paper';\r\nimport { buttonStyle } from '../../assets/stylesheets/buttons.js';\r\nimport { textStyles } from '../../assets/stylesheets/text.js';\r\n\r\nconst ChapterSelectButton = ({onPress, label}) => (\r\n  <Button\r\n    mode=\"outlined\"\r\n    uppercase={false}\r\n    style={[buttonStyle.default, buttonStyle.chip, buttonStyle.transparent]}\r\n    labelStyle={textStyles.plain}\r\n    onPress={onPress}\r\n  >{label}</Button>\r\n);\r\n\r\nexport { ChapterSelectButton };\r\n","const BOOK_METADATA = {\r\n  'Genesis': {chapterCount: 50, order: 1},\r\n  'Exodus': {chapterCount: 40, order: 2},\r\n  'Leviticus': {chapterCount: 27, order: 3},\r\n  'Numbers': {chapterCount: 36, order: 4},\r\n  'Deuteronomy': {chapterCount: 34, order: 5},\r\n  'Joshua': {chapterCount: 24, order: 6},\r\n  'Judges': {chapterCount: 21, order: 7},\r\n  'Ruth': {chapterCount: 4, order: 8},\r\n  '1 Samuel': {chapterCount: 31, order: 9},\r\n  '2 Samuel': {chapterCount: 24, order: 10},\r\n  '1 Kings': {chapterCount: 22, order: 11},\r\n  '2 Kings': {chapterCount: 25, order: 12},\r\n  '1 Chronicles': {chapterCount: 29, order: 13},\r\n  '2 Chronicles': {chapterCount: 36, order: 14},\r\n  'Ezra': {chapterCount: 10, order: 15},\r\n  'Nehemiah': {chapterCount: 13, order: 16},\r\n  'Esther': {chapterCount: 10, order: 17},\r\n  'Job': {chapterCount: 42, order: 18},\r\n  'Psalms': {chapterCount: 150, order: 19},\r\n  'Proverbs': {chapterCount: 31, order: 20},\r\n  'Ecclesiastes': {chapterCount: 12, order: 21},\r\n  'Song of Solomon': {chapterCount: 8, order: 22},\r\n  'Isaiah': {chapterCount: 66, order: 23},\r\n  'Jeremiah': {chapterCount: 52, order: 24},\r\n  'Lamentations': {chapterCount: 5, order: 25},\r\n  'Ezekiel': {chapterCount: 48, order: 26},\r\n  'Daniel': {chapterCount: 12, order: 27},\r\n  'Hosea': {chapterCount: 14, order: 28},\r\n  'Joel': {chapterCount: 3, order: 29},\r\n  'Amos': {chapterCount: 9, order: 30},\r\n  'Obadiah': {chapterCount: 1, order: 31},\r\n  'Jonah': {chapterCount: 4, order: 32},\r\n  'Micah': {chapterCount: 7, order: 33},\r\n  'Nahum': {chapterCount: 3, order: 34},\r\n  'Habakkuk': {chapterCount: 3, order: 35},\r\n  'Zephaniah': {chapterCount: 3, order: 36},\r\n  'Haggai': {chapterCount: 2, order: 37},\r\n  'Zechariah': {chapterCount: 14, order: 38},\r\n  'Malachi': {chapterCount: 4, order: 39},\r\n  'Matthew': {chapterCount: 28, order: 40},\r\n  'Mark': {chapterCount: 16, order: 41},\r\n  'Luke': {chapterCount: 24, order: 42},\r\n  'John': {chapterCount: 21, order: 43},\r\n  'Acts': {chapterCount: 28, order: 44},\r\n  'Romans': {chapterCount: 16, order: 45},\r\n  '1 Corinthians': {chapterCount: 16, order: 46},\r\n  '2 Corinthians': {chapterCount: 13, order: 47},\r\n  'Galatians': {chapterCount: 6, order: 48},\r\n  'Ephesians': {chapterCount: 6, order: 49},\r\n  'Philippians': {chapterCount: 4, order: 50},\r\n  'Colossians': {chapterCount: 4, order: 51},\r\n  '1 Thessalonians': {chapterCount: 5, order: 52},\r\n  '2 Thessalonians': {chapterCount: 3, order: 53},\r\n  '1 Timothy': {chapterCount: 6, order: 54},\r\n  '2 Timothy': {chapterCount: 4, order: 55},\r\n  'Titus': {chapterCount: 3, order: 56},\r\n  'Philemon': {chapterCount: 1, order: 57},\r\n  'Hebrews': {chapterCount: 13, order: 58},\r\n  'James': {chapterCount: 5, order: 59},\r\n  '1 Peter': {chapterCount: 5, order: 60},\r\n  '2 Peter': {chapterCount: 3, order: 61},\r\n  '1 John': {chapterCount: 5, order: 62},\r\n  '2 John': {chapterCount: 1, order: 63},\r\n  '3 John': {chapterCount: 1, order: 64},\r\n  'Jude': {chapterCount: 1, order: 65},\r\n  'Revelation': {chapterCount: 22, order: 66}\r\n};\r\n\r\nexport { BOOK_METADATA };\r\n","import React from \"react\";\r\nimport { Text, TouchableOpacity } from \"react-native\";\r\n\r\n// custom\r\nimport { layoutStyles } from \"../../assets/stylesheets/layouts\";\r\nimport { textStyles } from \"../../assets/stylesheets/text\";\r\n\r\nconst ListOption = ({label, onPress, isSelected}) => (\r\n  <TouchableOpacity\r\n    style={[layoutStyles.listSelectOption, isSelected && layoutStyles.listSelectOptionSelected]}\r\n    onPress={onPress}\r\n  >\r\n    <Text style={textStyles.listSelectOption}>{label}</Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nexport { ListOption };\r\n","/*\r\n * Array of N items code copied from https://stackoverflow.com/a/38213213/14257952 Jul 2022\r\n */\r\n\r\nimport { React, useEffect, useState } from 'react';\r\nimport { Modal, Portal } from 'react-native-paper';\r\nimport { FlatList, View } from 'react-native';\r\n\r\n// custom\r\nimport { BOOK_METADATA } from '../../constants/bookMetadata';\r\nimport { layoutStyles } from '../../assets/stylesheets/layouts';\r\nimport { ListOption } from '../buttons/ListOption';\r\n\r\nconst ChapterSelectModal = ({visible, setVisible, onChapterSelect, initialBookName, initialChapterNumber}) => {\r\n  const [selectedBook, setSelectedBook] = useState(initialBookName);\r\n  const [selectedChapter, setSelectedChapter] = useState(initialChapterNumber);\r\n  const [chapterCount, setChapterCount] = useState(0);\r\n  const [chapterSelectionDisplay, setChapterSelectionDisplay] = useState();\r\n\r\n  const resetSelection = () => {\r\n    setSelectedBook(initialBookName);\r\n    setSelectedChapter(initialChapterNumber);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    // if user did not select a chapter and wants to close modal, reset\r\n    selectedChapter || resetSelection();\r\n\r\n    setVisible(false)\r\n  };\r\n\r\n  // process data into array of objects, expected by FlatList\r\n  const booksData = Object.keys(BOOK_METADATA).map((key) => (\r\n    {bookName: key}\r\n  ));\r\n\r\n  // process chapter data into array of objects, expected by FlatList\r\n  const chapterData = chapterCount && [...Array(chapterCount).keys()].map(index => {\r\n    ++index;  // convert to 1-based\r\n\r\n    return (\r\n      {chapterNumber: index}\r\n    );\r\n  });\r\n\r\n  const submit = () => {\r\n    hideModal();\r\n    \r\n    onChapterSelect({book: selectedBook, chapter: selectedChapter});\r\n  };\r\n\r\n  useEffect(() => {\r\n    // update chapter options based on selected book\r\n    setChapterCount(BOOK_METADATA[selectedBook]?.chapterCount);\r\n  \r\n    // Deselect chapter when book is not initial selection.\r\n    // When it is the initial book, show the initial chapter\r\n    // but don't actually select it, because the modal would submit\r\n    if (selectedBook === initialBookName) {\r\n      setChapterSelectionDisplay(initialChapterNumber);\r\n    } else {\r\n      setSelectedChapter(null);\r\n      setChapterSelectionDisplay(null);\r\n    }\r\n  }, [selectedBook]);\r\n\r\n  // submit if chapter is selected by user\r\n  useEffect(() => {\r\n    selectedChapter !== initialChapterNumber && setChapterSelectionDisplay(selectedChapter);\r\n    selectedChapter && submit();\r\n  }, [selectedChapter]);\r\n\r\n  const renderBookNameItem = ({item}) => (\r\n    <ListOption\r\n      label={item.bookName}\r\n      onPress={() => setSelectedBook(item.bookName)}\r\n      isSelected={item.bookName === selectedBook}\r\n    ></ListOption>\r\n  );\r\n\r\n  // each item rendered by the chapters FlatList\r\n  const renderChapterNumberItem = ({item}) => (\r\n    <ListOption\r\n      label={item.chapterNumber}\r\n      onPress={() => setSelectedChapter(item.chapterNumber)}\r\n      isSelected={item.chapterNumber === chapterSelectionDisplay}\r\n    ></ListOption>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Portal>\r\n        <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={layoutStyles.modalContainerStyle}>\r\n          <View style={[layoutStyles.page, layoutStyles.horizontalContainer]}>\r\n            {/* list of books */}\r\n            <FlatList data={booksData} renderItem={renderBookNameItem} keyExtractor={item => item.bookName} />\r\n\r\n            {/* list of chapters */}\r\n            <FlatList data={chapterData} renderItem={renderChapterNumberItem} keyExtractor={item => item.chapterNumber} />\r\n          </View>\r\n        </Modal>\r\n      </Portal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { ChapterSelectModal };","import { React } from \"react\";\r\nimport { Pressable, Text } from \"react-native\";\r\n\r\n// custom\r\nimport { layoutStyles } from \"../../assets/stylesheets/layouts\";\r\nimport { textStyles } from \"../../assets/stylesheets/text\";\r\n\r\nconst Verse = ({verseText, verseNumber, onVersePress, isSelected}) => {  \r\n  return (\r\n    <Pressable\r\n      style={layoutStyles.inline}\r\n      onPress={() => {onVersePress({text: verseText, number: verseNumber})}}\r\n    >\r\n      <Text style={[textStyles, isSelected && textStyles.selectedVerse]}>\r\n        <Text style={textStyles.superscript}>{verseNumber}</Text>\r\n        <Text>{' ' + verseText + ' '}</Text>\r\n      </Text>\r\n    </Pressable>\r\n  );\r\n};\r\n\r\nexport { Verse };\r\n","/*\r\n * basic idea adapted from https://drum-machine-340.herokuapp.com/management\r\n */\r\n\r\nimport React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { layoutStyles } from \"../../assets/stylesheets/layouts\";\r\n\r\nconst Drawer = ({isOpen, children, minimize}) => {\r\n  return (\r\n    <>\r\n      {isOpen &&\r\n        <View style={[layoutStyles.drawer, !minimize && layoutStyles.fullScreenHeight]}>\r\n          {children}\r\n        </View>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Drawer };\r\n","import { React } from 'react';\r\nimport { Button } from 'react-native-paper';\r\nimport { buttonStyle } from '../../assets/stylesheets/buttons.js';\r\n\r\nconst RelatedButton = ({onPress, children}) => (\r\n  <Button\r\n    mode=\"contained\"\r\n    style={buttonStyle.default}\r\n    labelStyle={buttonStyle.defaultLabel}\r\n    onPress={onPress}\r\n  >{children}</Button>\r\n);\r\n\r\nexport { RelatedButton };\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { layoutStyles } from \"../../assets/stylesheets/layouts\";\r\nimport { RelatedButton } from \"../buttons/RelatedButton\";\r\n\r\n/*\r\n * small area with option buttons you can put in a drawer; counterpart to full-page DrawerPage\r\n */\r\nconst DrawerOptionsFragment = ({onRelatedNotesPress, onRelatedCommentaryPress}) => {\r\n  return (\r\n    <View>\r\n      {/* TODO: instead of alignSelf, put invisible spacers on the left,\r\n      same width as the left two MainNav buttons. Then rename buttons to just \"related\" */}\r\n      <View style={[layoutStyles.horizontalContainer, {alignSelf: 'flex-end'}]}>\r\n        <RelatedButton\r\n          onPress={onRelatedNotesPress}\r\n        >Related Notes</RelatedButton>\r\n        <RelatedButton\r\n          onPress={onRelatedCommentaryPress}\r\n        >Related Commentary</RelatedButton>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport { DrawerOptionsFragment };\r\n","import { React, useEffect, useState } from 'react';\r\nimport { IconButton } from 'react-native-paper';\r\n\r\n// custom\r\nimport { buttonStyle } from '../../assets/stylesheets/buttons';\r\n\r\nconst icons = {\r\n  'UP': 'chevron-up',\r\n  'DOWN': 'chevron-down'\r\n};\r\n\r\nconst colors = {\r\n  'HIDDEN': 'transparent',\r\n  'DEFAULT': buttonStyle.default.backgroundColor\r\n};\r\n\r\nconst DrawerExpandButton = ({onPress, isInitiallyUp, hide}) => {\r\n  const [isUp, setIsUp] = useState(isInitiallyUp);\r\n  const [iconColor, setIconColor] = useState();\r\n  const [disabled, setDisabled] = useState(true);\r\n\r\n  const handlePress = () => {\r\n    setIsUp(!isUp);\r\n    onPress();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDisabled(hide);\r\n    setIconColor(hide ? colors.HIDDEN : colors.DEFAULT);\r\n  }, [hide]);\r\n\r\n  return (\r\n    <IconButton\r\n      icon={isUp ? icons.UP : icons.DOWN}\r\n      size={20}\r\n      onPress={handlePress}\r\n      // React Native does not support visibility: 'hidden' as of Jul 2022,\r\n      // but setting color to transparent and disabled to true effectively hides the button\r\n      color={iconColor}\r\n      iconColor={iconColor}  // ver 5.x rename of color prop\r\n      disabled={disabled}\r\n      style={hide && {pointerEvents: 'none'}}\r\n    ></IconButton>\r\n  );\r\n};\r\n\r\nexport { DrawerExpandButton };\r\n","import { React } from 'react';\r\nimport { IconButton } from 'react-native-paper';\r\n\r\nconst CloseButton = ({onPress}) => (\r\n  <IconButton\r\n    icon=\"close\"\r\n    size={20}\r\n    onPress={onPress}\r\n  ></IconButton>\r\n);\r\n\r\nexport { CloseButton };\r\n","import React from \"react\";\r\nimport { View, Text } from \"react-native\";\r\n\r\n// custom\r\nimport { layoutStyles } from \"../../assets/stylesheets/layouts\";\r\nimport { DrawerExpandButton } from \"../buttons/DrawerExpandButton\";\r\nimport { CloseButton } from \"../buttons/CloseButton\";\r\n\r\n// if onExpandPress is not passed, expand button will be hidden\r\nconst DrawerAppBar = ({contextHeaderText, onClosePress, onExpandPress}) => {\r\n  const closeButton = (\r\n    <CloseButton\r\n      onPress={onClosePress}\r\n      // hide if no callback was passed\r\n      style={!onClosePress && {visibility: 'hidden'}}>\r\n    </CloseButton>\r\n  );\r\n\r\n  const expandButton = (\r\n    <DrawerExpandButton\r\n      onPress={onExpandPress}\r\n      isInitiallyUp={true}\r\n      // Hide if no callback was passed.\r\n      hide={!onExpandPress}\r\n    >\r\n    </DrawerExpandButton>\r\n  );\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        layoutStyles.horizontalContainer,\r\n        {justifyContent: 'space-between', marginLeft: '10px', marginRight: '10px'}\r\n      ]}\r\n    >\r\n      <Text>{contextHeaderText}</Text>\r\n      {closeButton}\r\n      {expandButton}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport { DrawerAppBar };\r\n","import React from \"react\";\r\n\r\n// custom components\r\nimport { DrawerAppBar } from \"./DrawerAppBar\";\r\n\r\n// page you can put in a drawer; full-page counterpart to DrawerOptionsFragment\r\nconst DrawerPage = ({headerText, onClosePress, onExpandPress, children}) => {\r\n  return (\r\n    <>\r\n      <DrawerAppBar\r\n        contextHeaderText={headerText}\r\n        onClosePress={onClosePress}\r\n        onExpandPress={onExpandPress}\r\n      ></DrawerAppBar>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { DrawerPage };\r\n","export function createVerse(bookNameIn, chapterNumberIn, verseNumberIn) {\r\n  return ({\r\n    bookName: bookNameIn,\r\n    chapterNumber: '' + chapterNumberIn,\r\n    verseNumber: '' + verseNumberIn,\r\n    reference: `${bookNameIn} ${chapterNumberIn}:${verseNumberIn}`,\r\n    equals: function(verseObj) {\r\n      return (\r\n        this.bookName === verseObj.bookName &&\r\n        this.chapterNumber === verseObj.chapterNumber &&\r\n        this.verseNumber === verseObj.verseNumber\r\n      );\r\n    }\r\n  });\r\n}","import { React, useState } from 'react';\r\nimport { Provider, Portal, Dialog, Button, Paragraph } from 'react-native-paper';\r\n\r\n// custom components\r\nimport { FormLabel } from '../common/FormLabel';\r\nimport { SingletonInputFormText } from '../common/SingletonInputFormText';\r\n\r\n// custom util\r\nimport { createVerse } from '../../util/Verse';\r\n\r\n/**\r\n * @param onSubmit: called with argument object created by Verse.createVerse()\r\n */\r\nconst NoteEditDialog = ({setShouldShowDialog, onSubmit, onCancel, initialNoteData}) => {\r\n  const [noteData, setNoteData] = useState(initialNoteData || {});\r\n  const hideDialog = () => setShouldShowDialog(false);\r\n\r\n  const handleCancel = () => {\r\n    hideDialog();\r\n    onCancel && onCancel();\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    hideDialog();\r\n\r\n    // TODO: placeholder until SingletonInputFormText is replaced by a verse select modal\r\n    // onSubmit(noteData);  // noteData is already [createVerse()]\r\n    const tempLinkedVerses = noteData.linkedVerses.map(referenceText => (createVerse(\r\n      referenceText.split(' ')[0],  // book name\r\n      referenceText.split(' ')[1].split(':')[0],  // chapter number\r\n      referenceText.split(':')[1]   // verse number\r\n    )));\r\n    const tempSubmitData = {...noteData, linkedVerses: tempLinkedVerses};\r\n    console.log('submitting edited/new note ', tempSubmitData);\r\n    onSubmit(tempSubmitData);\r\n  };\r\n\r\n  return (\r\n    <Provider>\r\n      <Portal>\r\n        <Dialog visible={true} onDismiss={hideDialog}>\r\n          <Dialog.Title>\r\n            {/* note title. TODO: use placeholder text instead of FormLable */}\r\n            <FormLabel label=\"title\"></FormLabel>\r\n            <SingletonInputFormText\r\n              currentValue={noteData?.title || ''}\r\n              handleChange={(text) => setNoteData({...noteData, title: text})}\r\n            ></SingletonInputFormText>\r\n          </Dialog.Title>\r\n          <Dialog.Content>\r\n            {/* note body */}\r\n            <SingletonInputFormText\r\n              currentValue={noteData?.body || ''}\r\n              handleChange={(text) => setNoteData({...noteData, body: text})}\r\n              autoHeight\r\n              multiline\r\n            ></SingletonInputFormText>\r\n\r\n            {/* linked verses */}\r\n            {/* TODO: use verse selection modal, based on chapter selection modal */}\r\n            {/* TODO: use a prop array of verses if context from reading page is available */}\r\n            <FormLabel label=\"link to verses\"></FormLabel>\r\n            <Paragraph>csv text only for now, because time. Use comma-space</Paragraph>\r\n            <SingletonInputFormText\r\n              currentValue={noteData?.linkedVerses?.join(', ')}\r\n              handleChange={(text) => setNoteData({...noteData, linkedVerses: text.split(', ')})}\r\n              autoHeight\r\n              multiline\r\n            ></SingletonInputFormText>\r\n\r\n            {/* TODO: checkbox for isPublic */}\r\n          </Dialog.Content>\r\n          <Dialog.Actions>\r\n            <Button onPress={handleSubmit}>Create</Button>\r\n            <Button onPress={handleCancel}>Cancel</Button>\r\n          </Dialog.Actions>\r\n        </Dialog>\r\n      </Portal>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport { NoteEditDialog };\r\n","import React from \"react\";\r\nimport { IconButton } from \"react-native-paper\";\r\n\r\n// custom styles\r\nimport { iconButtonStyle } from \"../../assets/stylesheets/buttons\";\r\n\r\nconst SaveButton = ({onPress}) => (\r\n  <IconButton\r\n    icon=\"content-save\"\r\n    mode=\"text\"\r\n    onPress={onPress}\r\n    style={iconButtonStyle}\r\n  ></IconButton>\r\n);\r\n\r\nexport { SaveButton };\r\n","import React from \"react\";\r\nimport { IconButton } from \"react-native-paper\";\r\n\r\n// custom styles\r\nimport { iconButtonStyle } from \"../../assets/stylesheets/buttons\";\r\n\r\nconst EditButton = ({onPress}) => (\r\n  <IconButton\r\n    icon=\"pencil\"\r\n    mode=\"text\"\r\n    onPress={onPress}\r\n    style={iconButtonStyle}\r\n  ></IconButton>\r\n);\r\n\r\nexport { EditButton };\r\n","import { React } from 'react';\r\nimport { IconButton } from 'react-native-paper';\r\nimport { buttonStyle } from '../../assets/stylesheets/buttons.js';\r\n\r\nconst DeleteIconButton = ({onPress}) => (\r\n  <IconButton\r\n    icon=\"delete\"\r\n    // mode=\"outlined\"\r\n    // style={[buttonStyle.default, buttonStyle.warning]}\r\n    labelStyle={buttonStyle.warningLabel}\r\n    onPress={onPress}\r\n  ></IconButton>\r\n);\r\n\r\nexport { DeleteIconButton };\r\n","import React from \"react\";\r\nimport { IconButton } from \"react-native-paper\";\r\n\r\n// custom styles\r\nimport { iconButtonStyle } from \"../../assets/stylesheets/buttons\";\r\n\r\nconst UndoButton = ({onPress}) => (\r\n  <IconButton\r\n    icon=\"undo\"\r\n    mode=\"text\"\r\n    onPress={onPress}\r\n    style={iconButtonStyle}\r\n  ></IconButton>\r\n);\r\n\r\nexport { UndoButton };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\n\r\n// custom styles\r\nimport { layoutStyles } from \"../../assets/stylesheets/layouts\";\r\n\r\n// custom components\r\nimport { SingletonInputFormText } from \"../common/SingletonInputFormText\";\r\nimport { FormLabel } from \"../common/FormLabel\";\r\nimport { SaveButton } from \"../buttons/SaveButton\";\r\nimport { EditButton } from \"../buttons/EditButton\";\r\nimport { DeleteIconButton } from \"../buttons/DeleteIconButton\";\r\nimport { UndoButton } from \"../buttons/UndoButton\";\r\n\r\nconst Note = ({noteId, title, body, linkedVerseReferences, isPublic, deleteMe}) => {\r\n  const [currentBody, setCurrentBody] = useState(body);\r\n  const [hasChanges, setHasChanges] = useState(false);\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [showDeleteButton, setShowDeleteButton] = useState(false);\r\n  const [showEditButton, setShowEditButton] = useState(true);\r\n  const [numberOfLines, setNumberOfLines] = useState(2);\r\n\r\n  /**\r\n   * display management\r\n   */\r\n  const toggleBlurFocusButtons = (showBlurButtons) => {\r\n    console.log(showBlurButtons && 'DEBUG: showing edit button');\r\n    console.log(!showBlurButtons && 'DEBUG: showing delete button');\r\n\r\n    setShowEditButton(showBlurButtons);\r\n    setShowDeleteButton(!showBlurButtons);\r\n  };\r\n\r\n  /**\r\n   * button press handlers\r\n   */\r\n  const handleEditPress = () => {\r\n    focusEdit();\r\n    \r\n    // DON'T toggle edit/delete button display; focus listener already does\r\n  };\r\n\r\n  const handleSavePress = () => {\r\n    saveNote();\r\n    toggleBlurFocusButtons(true);\r\n  };\r\n\r\n  const handleUndoPress = () => {\r\n    discardChanges();\r\n    toggleBlurFocusButtons(true);\r\n  };\r\n\r\n  /**\r\n   * listener handlers\r\n   */\r\n  const handleBodyChange = (newText) => {\r\n    setCurrentBody(newText);\r\n    setHasChanges(true);\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    toggleBlurFocusButtons(false);\r\n\r\n    // sync independently tracked flag\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    // TODO: this is a race condition that should be turned into useEffect somehow\r\n    setTimeout(() => (toggleBlurFocusButtons(true)), 200);\r\n\r\n    // sync independently tracked flag\r\n    setIsFocused(false);\r\n  };\r\n\r\n  /**\r\n   * helpers\r\n   */\r\n  const focusEdit = () => {\r\n    console.log('focus input component');\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const deleteNote = () => {\r\n    console.log('deleting note with body ', currentBody);\r\n    deleteMe(noteId);\r\n  };\r\n\r\n  const saveNote = () => {\r\n    console.log('saving note with body ', currentBody);\r\n    setHasChanges(false);\r\n  };\r\n\r\n  const discardChanges = () => {\r\n    console.log('resetting note body to prop/db version');\r\n    setCurrentBody(body);\r\n    setHasChanges(false);\r\n  };\r\n\r\n  /**\r\n   * side effect listeners\r\n   */\r\n\r\n  // expand input area on focus\r\n  useEffect(() => {\r\n    const showLines = isFocused ? 5 : 2;\r\n    \r\n    setNumberOfLines(showLines);\r\n  }, [isFocused]);\r\n\r\n  return (\r\n    <View>\r\n      <FormLabel label={title}></FormLabel>\r\n      {/* TODO: verticalCenter is good for 1-line Notes but not large Notes */}\r\n      <View style={[layoutStyles.container, layoutStyles.horizontalContainer]}>\r\n        <View style={[layoutStyles.container, layoutStyles.verticalContainer]}>\r\n          <SingletonInputFormText\r\n            style={{minWidth: '50%'}}\r\n            handleChange={handleBodyChange}\r\n            currentValue={currentBody}\r\n            flexValue={1}\r\n            multiline\r\n            numberOfLines={numberOfLines}\r\n            // autoHeight  // TODO: setting this (and multiline) based on isFocused doesn't work, because autoHeight depends on onContentSizeChange event, which does not fire on focus\r\n            isFocused={isFocused}\r\n            onFocus={handleFocus}\r\n            onBlur={handleBlur}\r\n          ></SingletonInputFormText>\r\n          <Text style={{fontStyle: 'italic'}}>{linkedVerseReferences.join(' ')}</Text>\r\n          {isPublic && <Text style={{fontStyle: 'italic'}}>public</Text>}\r\n        </View>\r\n\r\n        {/* TODO: maxWidth: min-content lets buttons wrap, but it causes a vertical default, which is not wanted.\r\n        This should be changed to a media query where the default button View is row wrap atop the note text input,\r\n        and at a min-width breakpoint is changed to row wrap at the right of the text input */}\r\n        <View style={[layoutStyles.horizontalContainer, {flexWrap: 'wrap', maxWidth: 'min-content'}]}>\r\n          {showEditButton && \r\n            <EditButton onPress={handleEditPress}></EditButton>\r\n          }\r\n          {hasChanges &&\r\n            <>\r\n              <UndoButton onPress={handleUndoPress}></UndoButton>\r\n              <SaveButton onPress={handleSavePress}></SaveButton>\r\n            </>\r\n          }\r\n          {showDeleteButton &&\r\n            <DeleteIconButton onPress={deleteNote}></DeleteIconButton>\r\n          }\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport { Note };\r\n","import React from \"react\";\r\nimport { Note } from \"./Note\";\r\n\r\nconst NotesList = ({notes, deleteNote}) => (\r\n  <>\r\n    {notes.map((note) => (\r\n      <Note\r\n        key={note.id}\r\n        noteId={note.id}\r\n        title={note.title}\r\n        body={note.body}\r\n        linkedVerseReferences={note.linkedVerses.map(verseObj => verseObj.reference)}\r\n        isPublic={note.isPublic}\r\n        deleteMe={deleteNote}\r\n      ></Note>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport { NotesList };\r\n","import { React, useState } from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport { Provider, Portal, Dialog, Button, Paragraph } from 'react-native-paper';\r\n\r\n// custom components\r\nimport { FormLabel } from './FormLabel';\r\n\r\n// custom util\r\nimport { createVerse } from '../../util/Verse';\r\n\r\nconst TEST_VERSES = [createVerse('Matthew', 5, 5)];\r\n\r\n/**\r\n * @param onSubmit: called with argument object\r\n *  {\r\n *    selectedVerses: [Verse]\r\n *  }\r\n */\r\nconst NoteFilterModal = ({setShouldShowDialog, onCancel, filterSettings, setFilterSettings}) => {\r\n  const [selectedVersesTest, setSelectedVersesTest] = useState();\r\n  const hideDialog = () => setShouldShowDialog(false);\r\n\r\n  const handleCancel = () => {\r\n    hideDialog();\r\n    onCancel && onCancel();  // parent should undo changes\r\n  };\r\n\r\n  function handleSubmit() {\r\n    console.log('filter modal: *keeping filter settings ', filterSettings);\r\n    hideDialog();\r\n\r\n    // no need to submit to parent; parent state already updated\r\n  }\r\n\r\n  const handleRelatedVersesChange = newRelatedVerses => {\r\n    console.log('filter modal: setting new filter settings ', {...filterSettings, selectedVerses: [...newRelatedVerses]});\r\n    setFilterSettings((filterSettings) => ({...filterSettings, selectedVerses: [...newRelatedVerses]}));\r\n  };\r\n\r\n  return (\r\n    <Provider>\r\n      <Portal>\r\n        <Dialog visible={true} onDismiss={hideDialog}>\r\n          <Dialog.Title>\r\n            <Text>Filters</Text>\r\n          </Dialog.Title>\r\n          <Dialog.Content>\r\n            <FormLabel label=\"Related verses\"></FormLabel>\r\n            <Text>TODO: button here to open verse selection modal, which will call handleRelatedVersesChange</Text>\r\n            <View>{filterSettings?.selectedVerses?.map(verseObj => (\r\n              <Text key={verseObj.reference}>{verseObj.reference}</Text>\r\n            ))}</View>\r\n            \r\n            {/* TODO: debug why one of these conditions is met even after setting\r\n            filterSettings.selectedVerses to a valid value? */}\r\n            {/* if no selectedVerses */}\r\n            {!filterSettings?.selectedVerses || filterSettings.selectedVerses.length < 1 &&\r\n              <Text>none</Text>\r\n            }\r\n            {/* DEBUG */}\r\n            <Text>filterSettings.selectedVerses... SAME EXACT expression as correctly updating js: </Text>\r\n            <Paragraph>{JSON.stringify(filterSettings?.selectedVerses)}</Paragraph>\r\n          </Dialog.Content>\r\n          <Dialog.Actions>\r\n            <Button onPress={() => handleRelatedVersesChange(TEST_VERSES)}>Test Selected Verses</Button>\r\n            <Button onPress={handleSubmit}>Apply</Button>\r\n            <Button onPress={handleCancel}>Cancel</Button>\r\n          </Dialog.Actions>\r\n        </Dialog>\r\n      </Portal>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport { NoteFilterModal };\r\n","/**\r\n * Returns a short string describing the selected verses.\r\n * For example, \"Genesis 1:1\" for 1 selected verse, or \"Genesis 1:1 etc\" for a range,\r\n * where the verse number shown is always the first element of verseNumbers.\r\n * @param verses [{bookName: str, chapterNumber: int, verseNumber: int}]\r\n */\r\nexport const versesToString = (verses) => {\r\n  \r\n  // initialize default return value\r\n  let contextHeaderText = '';\r\n  if (!verses || verses?.length < 1) return contextHeaderText;\r\n\r\n  const firstBook = verses[0]?.bookName;\r\n  const firstChapter = verses[0]?.chapterNumber;\r\n  const firstVerse = verses[0]?.verseNumber;\r\n\r\n  if (firstBook && firstChapter && firstVerse) {\r\n    contextHeaderText = `${firstBook} ${firstChapter}:${firstVerse}`;\r\n  }\r\n\r\n  // append 'etc' for ranges\r\n  contextHeaderText += verses?.length > 1 ? ' etc'\r\n    : '';\r\n  \r\n  return contextHeaderText;\r\n};\r\n","/**\r\n * Defines functions used to interact with the API, for notes\r\n */\r\n\r\nimport axios from \"axios\";\r\n\r\n// custom util\r\nimport { BASE_URL } from \"../constants/apiData\";\r\nimport { createVerse } from \"../util/Verse\";\r\n\r\nconst sampleNotes = [\r\n  {\r\n    // ID can be a combo of title and linked verses, and uniqueness can be enforced\r\n    'id': '1',\r\n    'title': 'Note Title Abc',\r\n    'body': 'I think this verse is cool because a comparison can be made between the symbolism of the metaphors of both passages insofar that one applies best practices of exegesis and hermeneutics.',\r\n    'linkedVerses': [createVerse('Revelation', 2, 5)],\r\n    'isPublic': true\r\n  },\r\n  {\r\n    'id': '2',\r\n    'title': 'Note Title 2',\r\n    'body': 'Glory be',\r\n    'linkedVerses': [createVerse('Genesis', 1, 10)],\r\n    'isPublic': false\r\n  },\r\n  {\r\n    'id': '3',\r\n    'title': 'My Note Title',\r\n    'body': 'I think this passage is pretty nice.',\r\n    'linkedVerses': [createVerse('Genesis', 14, 2), createVerse('Psalms', 145, 100), createVerse('Zechariah', 1, 3), createVerse('Matthew', 5, 5)],\r\n    'isPublic': true\r\n  },\r\n  {\r\n    'id': '4',\r\n    'title': 'Grocery list',\r\n    'body': `Captain Crunch Berries\\nCaptain Crunch Chocolate\\nCaptain Crunch Peanut Butter`,\r\n    'linkedVerses': [],\r\n    'isPublic': true\r\n  },\r\n];\r\n\r\n/**\r\n * Gets data for all Notes of a User from the database and returns a promise with the data\r\n */\r\nexport const fetchAllNotes = async (userName) => {\r\n  // TODO: hit the api\r\n  // const reqUrl = `${BASE_URL}notes/${userName}`;\r\n  // const res = await axios.get(reqUrl);\r\n\r\n  return sampleNotes;\r\n};\r\n\r\n/**\r\n * Adds a new Note to the database and returns a promise with a bool for success/fail\r\n * @param noteData object in the form {title: string, body: string, linkedVerses: string[], isPublic: bool}\r\n * @return bool indicating success\r\n */\r\nexport const createNote = async (noteData, username) => {\r\n  // TODO: call api at POST /api/notes/:username\r\n  // TODO: using the note id would be fine\r\n  /* note from Tim 8/1/22: make sure that it has this form, with reference to only one verse for now\r\n     {\r\n      \"title\": \"string\",\r\n      \"body\": \"This is such an incredible verse\",\r\n      \"linkedVerses\": [\"John\", 3, 16],\r\n      \"isPublic\": true\r\n     }\r\n     */\r\n  //   const reqUrl = `${BASE_URL}notes/${username}`;\r\n  //   const reqBodyData = noteData;\r\n  //   const res = await axios.post(reqUrl, reqBodyData);\r\n  return true;\r\n};\r\n\r\n/**\r\n * Updates a Note in the database and returns a promise with a bool indicating success\r\n * @param oldNoteData {title: str, body: str, isPublic: bool, linkedVerses: createVerse()[]}\r\n * @param newNoteData {title: str, body: str, isPublic: bool, linkedVerses: createVerse()[]}\r\n * @return bool indicating success\r\n */\r\nexport const updateNote = async (oldNoteData, newNoteData, username) => {\r\n  /** note from Tim 8/1/22: send PUT to /api/notes/:username with body\r\n   *   // TODO: using the note id would be fine\r\n    {\r\n      \"oldTitle\": \"string\",\r\n      \"newTitle\": \"string\",\r\n      \"oldBody\": \"This is such an incredible verse\",\r\n      \"newBody\": \"This is really such an incredible verse\",\r\n      \"linkedVerses\": [\"John\", 3, 16],  // TODO: api only handles one verse for now\r\n      \"isPublic\": true\r\n    }\r\n    */\r\n  return true;\r\n};\r\n\r\n/**\r\n * Deletes a Note from the database and returns a promise with a bool indicating success\r\n * @return bool indicating success\r\n */\r\nexport const deleteNote = async (username, noteId) => {\r\n  // TODO: call api\r\n  // TODO: using the note id would be fine\r\n  /**\r\n    * note from Tim 8/1/22: send DELETE to /notes/:username with body \r\n    {\r\n      \"title\": \"string\",\r\n      \"body\": \"string\"\r\n    }\r\n  */\r\n  return true;\r\n};\r\n","import { React, useEffect, useState } from 'react';\r\nimport { ScrollView } from 'react-native';\r\nimport axios from 'axios';\r\n\r\n// custom components\r\nimport { PageStyler } from './PageStyler.js';\r\nimport { PageHeader } from '../common/PageHeader.js';\r\nimport { ContextHeader } from '../common/ContextHeader.js';\r\nimport { NoteEditDialog } from '../unique/NoteEditDialog.js';\r\nimport { NotesList } from '../unique/NotesList.js';\r\nimport { NoteFilterModal } from '../common/NoteFilterModal.js';\r\n\r\n// custom utils\r\nimport { versesToString } from '../../util/VerseReferenceFormatter.js';\r\nimport { BASE_URL } from '../../constants/apiData.js';\r\nimport { createVerse } from '../../util/Verse.js';\r\nimport * as Api from '../../api/notesApi.js';\r\n\r\n// If selectedVerses are provided, this is in a drawer.\r\n// selectedVerses are in the form [{bookName: str, chapterNumber: int, verseNumber: int}]\r\n// When in a drawer, set filter and don't render contextHeader (Drawer does).\r\n// Filter settings are independent of context header when set\r\nconst NotesPage = ({initialSelectedVerseObjects}) => {\r\n  const [filterSettings, setFilterSettings] = useState({});\r\n  const [contextHeaderText, setContextHeaderText] = useState('');\r\n  const [notes, setNotes] = useState([]);\r\n  const [showNoteCreateDialog, setShowNoteCreateDialog] = useState(false);\r\n  const [showNoteFilterModal, setShowNoteFilterModal] = useState(false);\r\n  const [userName, setUserName] = useState('CTCheeseman');  // TODO: use global state\r\n\r\n  /**\r\n   * API interaction\r\n   */\r\n  const fetchNoteData = async () => {\r\n    const freshNotes = await Api.fetchAllNotes();\r\n    setNotes(freshNotes);\r\n  };\r\n\r\n  const deleteNote = (noteId) => {\r\n    // TODO: call api\r\n    // const success = await Api.deleteNote();\r\n\r\n    setNotes(notes.filter(note => note.id !== noteId));\r\n\r\n    // TODO: after api call, update displayed notes\r\n    // fetchNoteData();\r\n  };\r\n\r\n  /**\r\n   * @param noteData {id: number, title: str, body: str, isPublic: bool, linkedVerses: Verse.createNote()}\r\n   */\r\n  const createNote = async (noteData) => {\r\n    // TODO: call api\r\n    // const success = await Api.createNote(noteData, userName);\r\n\r\n    console.log('NotesPage: creating note ', {...noteData});\r\n\r\n    const notesCopy = [...notes];\r\n    notesCopy.push({...noteData, id: notes[notes.length - 1].id + 1});\r\n    setNotes(notesCopy);\r\n\r\n    // TODO: after api call, update displayed notes\r\n    // fetchNoteData();\r\n  };\r\n\r\n  const updateNote = async (oldNote, newNote) => {\r\n    // const success = await Api.updateNote(oldNote, newNote, userName);\r\n    /** note from Tim 8/1/22: send PUT to /api/notes/:username with body\r\n    {\r\n      \"oldTitle\": \"string\",\r\n      \"newTitle\": \"string\",\r\n      \"oldBody\": \"This is such an incredible verse\",\r\n      \"newBody\": \"This is really such an incredible verse\",\r\n      \"linkedVerses\": [\"John\", 3, 16],\r\n      \"isPublic\": true\r\n    }\r\n     */\r\n  };\r\n\r\n  /**\r\n   * helpers\r\n   */\r\n  const initializeFilterSettings = () => (\r\n    setFilterSettings({\r\n      ...filterSettings,\r\n      selectedVerses: initialSelectedVerseObjects || [],\r\n    })\r\n  );\r\n    \r\n  /**\r\n   * side effect listeners\r\n   */\r\n  // set context header text based on selected verses\r\n  useEffect(() => {\r\n    const {selectedVerses} = filterSettings;\r\n\r\n    const newHeaderText = versesToString(selectedVerses)\r\n      || 'All';\r\n\r\n    setContextHeaderText(newHeaderText);\r\n\r\n    if (filterSettings?.selectedVerses && filterSettings.selectedVerses.length > 0) {\r\n      updateFilteredNotes();\r\n    }\r\n  }, [filterSettings?.selectedVerses]);\r\n\r\n  // filter displayed notes based on filter settings\r\n  // (a note should display if any of its linked verses are in filter settings)\r\n  const isInFilterSettings = verseObj => filterSettings.selectedVerses.some(verseObj2 => {\r\n    return verseObj2.equals(verseObj)\r\n  });\r\n  const updateFilteredNotes = () => {\r\n    setNotes(notes.filter(note => note.linkedVerses.some(isInFilterSettings)));\r\n    console.log('NotesPage: updating notes to match settings: ', filterSettings.selectedVerses);\r\n    console.log('NotesPage: new notes: ', notes.filter(note => note.linkedVerses.some(isInFilterSettings)));\r\n  }\r\n\r\n  /**\r\n   * handlers\r\n   */\r\n  const handleFilterPress = () => setShowNoteFilterModal(true);\r\n  const handleNewPress = () => setShowNoteCreateDialog(true);\r\n\r\n  /**\r\n   * initialization\r\n   */\r\n  useEffect(fetchNoteData, []);\r\n  useEffect(initializeFilterSettings, [initialSelectedVerseObjects]);\r\n\r\n  return (\r\n    <>\r\n      {/* If initialSelectedVerses are provided, this component is in a drawer,\r\n          so don't show header */}\r\n      {!initialSelectedVerseObjects && <ContextHeader headingText={contextHeaderText}></ContextHeader>}\r\n      <PageHeader\r\n        headingText=\"My Notes\"\r\n        onFilterPress={!initialSelectedVerseObjects && handleFilterPress}\r\n        onNewPress={handleNewPress}\r\n      ></PageHeader>\r\n      <PageStyler>\r\n        <ScrollView scrollEnabled=\"true\">\r\n          <NotesList\r\n            notes={notes}\r\n            deleteNote={deleteNote}\r\n          ></NotesList>\r\n        </ScrollView>\r\n      </PageStyler>\r\n      {showNoteCreateDialog &&\r\n        <NoteEditDialog\r\n          setShouldShowDialog={setShowNoteCreateDialog}\r\n          onCancel={() => setShowNoteCreateDialog(false)}\r\n          onSubmit={createNote}\r\n        ></NoteEditDialog>\r\n      }\r\n      {showNoteFilterModal &&\r\n        <NoteFilterModal\r\n          setShouldShowDialog={setShowNoteFilterModal}\r\n          onCancel={() => setShowNoteFilterModal(false)}\r\n          filterSettings={filterSettings}\r\n          setFilterSettings={setFilterSettings}\r\n        ></NoteFilterModal>\r\n      }\r\n    </>\r\n  );\r\n};\r\n  \r\nexport { NotesPage };\r\n","import { React, useState } from 'react';\r\nimport { ScrollView } from 'react-native';\r\n\r\n// custom components\r\nimport { PageStyler } from './PageStyler.js';\r\nimport { PageHeader } from '../common/PageHeader.js';\r\nimport { ContextHeader } from '../common/ContextHeader.js';\r\nimport { NotesList } from '../unique/NotesList.js';\r\n\r\n// if selectedVerses are provided, set filter and don't render contextHeader (Drawer does).\r\n// Filter controls context heading\r\nconst CommentaryPage = ({initialSelectedVerses}) => {\r\n  const [selectedVerses, setSelectedVerses] = useState(initialSelectedVerses);\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  /**\r\n   * \r\n   * @param {*} noteId \r\n   */\r\n  const deleteNote = (noteId) => {\r\n    // TODO: call api\r\n    // const success = await Api.deleteNote();\r\n\r\n    setNotes(notes.filter(note => note.id !== noteId));\r\n\r\n    // TODO: after api call, update displayed notes\r\n    // fetchNoteData();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ContextHeader>{selectedVerses}</ContextHeader>\r\n      <PageHeader headingText=\"Commentary\"></PageHeader>\r\n      <PageStyler>\r\n        <ScrollView scrollEnabled=\"true\">\r\n          <NotesList\r\n            notes={notes}\r\n            deleteNote={deleteNote}\r\n          ></NotesList>\r\n        </ScrollView>\r\n      </PageStyler>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { CommentaryPage };","// remove Text newline (referenced Jul 2022): https://stackoverflow.com/a/70289492/14257952\r\n\r\nimport { React, useEffect, useState } from 'react';\r\nimport { Text, ScrollView } from 'react-native';\r\nimport { Provider } from 'react-native-paper';\r\nimport axios from 'axios';\r\n\r\n// custom styles\r\nimport { layoutStyles } from '../../assets/stylesheets/layouts.js';\r\n\r\n// custom components\r\nimport { PageStyler } from './PageStyler.js';\r\nimport { ContextHeader } from '../common/ContextHeader.js';\r\nimport { ChapterSelectButton } from '../buttons/ChapterSelectButton.js';\r\nimport { ChapterSelectModal } from '../common/ChapterSelectModal.js';\r\nimport { Verse } from '../unique/Verse.js';\r\nimport { Drawer } from '../common/Drawer.js';\r\nimport { DrawerOptionsFragment } from '../unique/DrawerOptionsFragment.js';\r\nimport { DrawerPage } from '../common/DrawerPage.js';\r\nimport { NotesPage } from './NotesPage.js';\r\nimport { CommentaryPage } from './CommentaryPage.js';\r\nimport { Enum } from '../../util/Enum.js';\r\n\r\n// custom util\r\nimport { versesToString } from \"../../util/VerseReferenceFormatter\";\r\nimport { BASE_URL } from '../../constants/apiData.js';\r\nimport { createVerse } from '../../util/Verse.js';\r\n\r\nconst drawerContentsOptions = new Enum('NOTES_PAGE', 'COMMENTARY_PAGE', 'VERSE_SELECTED_OPTIONS');\r\n\r\nconst ReadingPage = () => {\r\n  const [currentBookName, setCurrentBookName] = useState('Matthew');\r\n  const [currentChapterNumber, setCurrentChapterNumber] = useState(1);\r\n  const [currentVerseList, setCurrentVerseList] = useState([]);\r\n  const [selectedVerseNumbers, setSelectedVerseNumbers] = useState(new Set());  // constant-time checks for Verse.isSelected\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [currentBookAndChapterString, setCurrentBookAndChapterString] = useState('');\r\n  const [drawerIsMinimized, setDrawerIsMinimized] = useState(true);\r\n  const [drawerContents, setDrawerContents] = useState();\r\n  const [contextHeaderText, setContextHeaderText] = useState();\r\n  const [selectedVerseNumbersOrdered, setSelectedVersesOrdered] = useState([]);\r\n\r\n  // TODO: use min heap for selected verses to maintain order and contains() speed\r\n  useEffect(() => {\r\n    setSelectedVersesOrdered(Array.from(selectedVerseNumbers).sort());\r\n  }, [selectedVerseNumbers]);\r\n\r\n  const handleChapterSelect = ({book, chapter}) => {\r\n    setCurrentBookName(book);\r\n    setCurrentChapterNumber(chapter);\r\n    clearSelectedVerses();\r\n  };\r\n  \r\n  const openModal = () => setModalIsOpen(true);\r\n  const closeDrawer = () => {\r\n    setDrawerIsMinimized(true);\r\n\r\n    // hide verse context drawer\r\n    clearSelectedVerses();\r\n\r\n    // reset drawer contents to default\r\n    setDrawerContents(drawerContentsOptions.VERSE_SELECTED_OPTIONS);\r\n  };\r\n  const toggleExpandMinimizeDrawer = () => setDrawerIsMinimized(drawerIsMinimized => !drawerIsMinimized);\r\n\r\n  const fetchVerses = async () => {\r\n    console.log(`\\tbook name: ${currentBookName} chapter: ${currentChapterNumber}`);\r\n    try {\r\n      // validate (invalid values will block the next valid request)\r\n      if (!currentBookName || !currentChapterNumber) {\r\n        return;\r\n      }\r\n\r\n      console.log('fetching verses with book ', currentBookName, ' and chapter ', currentChapterNumber);\r\n      // replace spaces for url\r\n      const reqUrl = `${BASE_URL}verses/${currentBookName.replaceAll(' ', '-')}/${currentChapterNumber}`;\r\n      console.log('req url: ', reqUrl);\r\n\r\n      const res = await axios.get(reqUrl);\r\n      const verseList = res?.data ? res.data : null;\r\n\r\n      if (verseList) {\r\n        // console.log('success. Verses: ', JSON.stringify(verseList));\r\n        setCurrentVerseList(verseList);\r\n  \r\n        setCurrentBookAndChapterString(`${currentBookName} ${currentChapterNumber}`);\r\n      } else {\r\n        console.log('error. res: ', JSON.stringify(res));\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(`Selection ${currentBookName} ${currentChapterNumber} is not part of the current data set`);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // set current verse list based on current book & chapter selection\r\n  useEffect(() => {\r\n    console.log(`\\tbook name: ${currentBookName} chapter: ${currentChapterNumber}`);\r\n    fetchVerses();\r\n  },\r\n  [currentBookName, currentChapterNumber]);\r\n\r\n  const verseIsSelected = (verseNumber) => selectedVerseNumbers.has(verseNumber);\r\n\r\n  const handleVersePress = (verse) => {\r\n    verseIsSelected(verse.number) ? handleVerseDeselect(verse.number)\r\n      : handleVerseSelect(verse.number);\r\n  };\r\n\r\n  const handleVerseSelect = (verseNumber) => {\r\n    // add to set of selected verse numbers\r\n    const tempCopy = new Set(selectedVerseNumbers);\r\n    tempCopy.add(verseNumber);\r\n    setSelectedVerseNumbers(tempCopy);\r\n  };\r\n\r\n  const handleVerseDeselect = (verseNumber) => {\r\n    // remove from set of selected verse numbers\r\n    const tempCopy = new Set(selectedVerseNumbers);\r\n    tempCopy.delete(verseNumber);\r\n    setSelectedVerseNumbers(tempCopy);\r\n  };\r\n\r\n  const clearSelectedVerses = () => {\r\n    setSelectedVerseNumbers(new Set());\r\n  };\r\n\r\n  const handleRelatedNotesPress = () => {\r\n    setDrawerContents(drawerContentsOptions.NOTES_PAGE);\r\n  };\r\n\r\n  const handleRelatedCommentaryPress = () => {\r\n    setDrawerContents(drawerContentsOptions.COMMENTARY_PAGE);\r\n  };\r\n\r\n  // initialize drawer contents\r\n  useEffect(() => {\r\n    setDrawerContents(drawerContentsOptions.VERSE_SELECTED_OPTIONS);\r\n  }, []);\r\n\r\n  // update context header text\r\n  useEffect(() => {\r\n    const selectedVerseObjects = selectedVerseNumbersOrdered.map(\r\n      verseNumber => createVerse(currentBookName, currentChapterNumber, verseNumber)\r\n    );\r\n    let contextHeaderText = versesToString(selectedVerseObjects);\r\n    setContextHeaderText(contextHeaderText);\r\n  }, [currentBookName, currentChapterNumber, selectedVerseNumbersOrdered]);\r\n\r\n  return (\r\n    <>\r\n      <Provider>\r\n        <ContextHeader\r\n          customHeadingComponent={\r\n            <ChapterSelectButton label={currentBookAndChapterString} onPress={openModal}></ChapterSelectButton>\r\n          }\r\n        >\r\n        </ContextHeader>\r\n        <ChapterSelectModal\r\n          visible={modalIsOpen}\r\n          setVisible={setModalIsOpen}\r\n          onChapterSelect={handleChapterSelect}\r\n          initialBookName={currentBookName}\r\n          initialChapterNumber={currentChapterNumber}\r\n        ></ChapterSelectModal>\r\n        <PageStyler customPageStyle={layoutStyles.readingPage}>\r\n          <ScrollView scrollEnabled='true'>\r\n            <Text>\r\n              {currentVerseList && currentVerseList.map((verseData, index) =>\r\n                <Verse\r\n                  key={'v' + index}\r\n                  verseNumber={index + 1}\r\n                  verseText={verseData.bible_text}\r\n                  isSelected={verseIsSelected(index + 1)}\r\n                  onVersePress={handleVersePress}\r\n                ></Verse>\r\n              )}\r\n            </Text>\r\n          </ScrollView>\r\n        </PageStyler>\r\n\r\n        {/* Verse selected context drawer with \"Related\" buttons */}\r\n        <Drawer\r\n          isOpen={selectedVerseNumbers.size > 0}\r\n          minimize={drawerIsMinimized}\r\n        >\r\n          {/* JSX-style switch for drawerContents */}\r\n          {\r\n            drawerContents === drawerContentsOptions.VERSE_SELECTED_OPTIONS &&\r\n            <DrawerPage\r\n              headerText={contextHeaderText}\r\n              onClosePress={closeDrawer}\r\n            >\r\n              <DrawerOptionsFragment\r\n                onRelatedCommentaryPress={handleRelatedCommentaryPress}\r\n                onRelatedNotesPress={handleRelatedNotesPress}\r\n              ></DrawerOptionsFragment>\r\n            </DrawerPage>\r\n          }\r\n          {\r\n            drawerContents === drawerContentsOptions.NOTES_PAGE &&\r\n            <DrawerPage\r\n              headerText={contextHeaderText}\r\n              onClosePress={closeDrawer}\r\n              onExpandPress={toggleExpandMinimizeDrawer}\r\n            >\r\n              <NotesPage\r\n                initialSelectedVerseObjects={[...selectedVerseNumbers].map(verseNumber => \r\n                  createVerse(currentBookName, currentChapterNumber, verseNumber))}\r\n              ></NotesPage>\r\n            </DrawerPage>\r\n          }\r\n          {\r\n            drawerContents === drawerContentsOptions.COMMENTARY_PAGE &&\r\n            <DrawerPage\r\n              headerText={contextHeaderText}\r\n              onClosePress={closeDrawer}\r\n              onExpandPress={toggleExpandMinimizeDrawer}\r\n            >\r\n              <CommentaryPage initialSelectedVerses={selectedVerseNumbers}></CommentaryPage>\r\n            </DrawerPage>\r\n          }\r\n        </Drawer>\r\n\r\n      </Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { ReadingPage };\r\n","/*\r\n * copied from https://stackoverflow.com/questions/6346766/javascript-enumerator\r\n * Jul 2022\r\n */\r\nexport function Enum() {\r\n  for (let i = 0; i < arguments.length; ++i) {\r\n    this[arguments[i]] = i;\r\n  }\r\n\r\n  return this;\r\n}\r\n","import React from 'react';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n// custom\r\nimport { ProfilePage } from '../pages/ProfilePage';\r\nimport { ReadingPage } from '../pages/ReadingPage';\r\nimport { NotesPage } from '../pages/NotesPage';\r\nimport { CommentaryPage } from '../pages/CommentaryPage';\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\n\r\nconst screens = [\r\n  {name: 'Profile', component: ProfilePage, tabBarLabel: 'Profile', icon: 'account'},\r\n  {name: 'Reading', component: ReadingPage, tabBarLabel: 'Bible', icon: 'book'},\r\n  {name: 'Notes', component: NotesPage, tabBarLabel: 'Notes', icon: 'pencil'},\r\n  {name: 'Commentary', component: CommentaryPage, tabBarLabel: 'Commentary', icon: 'comment'}\r\n];\r\n\r\nconst MainNav = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Reading\"\r\n      barStyle={{ backgroundColor: '#eee' }}  // importing the color string from layouts.js is weird?\r\n    >\r\n      {screens.map(screen => (\r\n        <Tab.Screen\r\n          name={screen.name}\r\n          component={screen.component}\r\n          options={{\r\n            tabBarLabel: screen.tabBarLabel,\r\n            tabBarIcon: ({ color }) => (\r\n              <MaterialCommunityIcons name={screen.icon} color={color} size={26} />\r\n            ),\r\n          }}\r\n          key={screen.name}\r\n        />\r\n      ))}\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport { MainNav };","import { React, useState } from 'react';\r\n\r\n// custom components\r\nimport { PageHeader } from '../common/PageHeader.js';\r\nimport { SingletonInputForm } from '../common/SingletonInputForm.js';\r\nimport { SingletonInputFormText } from '../common/SingletonInputFormText.js';\r\nimport { SingletonInputFormSelect } from '../common/SingletonInputFormSelect.js';\r\nimport { FormSection } from '../common/FormSection.js';\r\nimport { PageStyler } from './PageStyler.js';\r\nimport { DeleteButton } from '../buttons/DeleteButton.js';\r\nimport { ConfirmDialog } from '../common/ConfirmDialog.js';\r\nimport { ContextHeader } from '../common/ContextHeader.js';\r\n\r\nconst DELETE_PROFILE_DIALOG_DESCRIPTION = 'Your public notes will remain. There\\'s nothing you can do about this. Mwahaha <3';\r\n\r\nconst ProfilePage = () => {\r\n  const [shouldShowDialog, setShouldShowDialog] = useState(false);\r\n\r\n  // TODO: these submit handlers could maybe be handled by the SingletonInputForm with an endpoint prop\r\n  const handleUsernameSubmit = (newUserName) => {\r\n    console.log('Profile page submitting new username:', newUserName);\r\n  };\r\n\r\n  const handleGospelPersonaSubmit = (newPersona) => {\r\n    console.log('Profile page submitting new gospel persona:', newPersona);\r\n  };\r\n\r\n  const handleAffiliationSubmit = (newAffiliation) => {\r\n    console.log('Profile page submitting new affiliation:', newAffiliation);\r\n  };\r\n\r\n  const deleteProfile = () => {\r\n    alert('Profile deleted! This will be a toast snack in the future');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ContextHeader headingText=\"Top o' the profile page to you, laddies\"></ContextHeader>\r\n      <PageHeader headingText=\"Profile\"></PageHeader>\r\n      <PageStyler>\r\n        <SingletonInputForm\r\n          label=\"Username\"\r\n          onSubmit={handleUsernameSubmit}\r\n          initialValue=\"Cheeseyman\"\r\n          inputComponent={SingletonInputFormText}\r\n        ></SingletonInputForm>\r\n        <FormSection label=\"Personas\">\r\n          <SingletonInputForm\r\n            label=\"Gospel Doctrine\"\r\n            onSubmit={handleGospelPersonaSubmit}\r\n            initialValue=\"undecided\"\r\n            inputComponent={SingletonInputFormSelect}\r\n            inputComponentProps={[[\r\n              {label: 'Undecided', value: 'undecided'},\r\n              {label: 'Grace', value: 'grace'},\r\n              {label: 'Grace Plus Response', value: 'gracePlusResponse'},\r\n              {label: 'Not Listed', value: 'notListed'}\r\n            ]]}\r\n          ></SingletonInputForm>\r\n          <SingletonInputForm\r\n            label=\"Affiliation\"\r\n            onSubmit={handleAffiliationSubmit}\r\n            initialValue=\"mormon\"\r\n            inputComponent={SingletonInputFormSelect}\r\n            inputComponentProps={[[\r\n              {label: 'Undecided', value: 'undecided'},\r\n              {label: 'Church of Jesus Christ (Mormon)', value: 'mormon'},\r\n              {label: 'Protestant', value: 'protestant'},\r\n              {label: 'Not Listed', value: 'notListed'}\r\n            ]]}\r\n          ></SingletonInputForm>\r\n        </FormSection>\r\n        <DeleteButton onPress={()=>{setShouldShowDialog(true)}}>Delete Profile</DeleteButton>\r\n\r\n      </PageStyler>\r\n      {shouldShowDialog &&\r\n        <ConfirmDialog\r\n          title=\"Delete Profile?\"\r\n          description={DELETE_PROFILE_DIALOG_DESCRIPTION}\r\n          shouldShowDialog={shouldShowDialog}\r\n          setShouldShowDialog={setShouldShowDialog}\r\n          onConfirm={deleteProfile}\r\n        ></ConfirmDialog>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport { ProfilePage };\r\n","import { React } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\n\n// custom components\nimport { MainNav } from './components/unique/MainNav';\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <View style={styles.container}>\n        <MainNav></MainNav>\n      </View>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"sourceRoot":""}